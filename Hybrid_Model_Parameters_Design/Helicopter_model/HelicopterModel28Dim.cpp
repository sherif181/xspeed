/*
 * HelicopterModel28Dim.cpp
 *
 *  Created on: 25-Nov-2014
 *      Author: amit
 */

#include "Hybrid_Model_Parameters_Design/Helicopter_model/HelicopterModel28Dim.h"

//With empty polytope U

void SetHelicopter_Parameters3(hybrid_automata& Hybrid_Automata,
		std::list<initial_state::ptr>& init_state_list,
		ReachabilityParameters& reach_parameters) {

	typedef typename boost::numeric::ublas::matrix<double>::size_type size_type;
	polytope::ptr initial_polytope_I;
	polytope::ptr invariant;
	polytope::ptr gaurd_polytope;
	Dynamics system_dynamics;

	std::cout << std::fixed; //to assign precision on the std::output stream
	std::cout.precision(12); //cout << setprecision(17);

	math::matrix<double> ConstraintsMatrixI, invariantConstraintsMatrix,
			gaurdConstraintsMatrix, Amatrix, AUmatrix, Bmatrix; //ConstraintsMatrixV,
	std::vector<double> boundValueI, invariantBoundValue, gaurdBoundValue; //boundValueV,
	int boundSignI;
//	int	invariantBoundSign, gaurdBoundSign;		//boundSignV

	size_type row, col;

	//Initial Polytope Declaration in the form of Ax<=b
	//this variable not required but just gives us idea about the number of rows and cols generated
	row = 56; //18	//56	//68		//70;
	col = 28; //28	//34		//35;
	ConstraintsMatrixI.resize(row, col);
	boundValueI.resize(row);

	for (unsigned int i = 0; i < col; i++) { //28		//34		//35
		for (unsigned int j = 0; j < col; j++) { //28		//34		//35
			if (i == j) { //for diagonal elements assign 1 and -1
				ConstraintsMatrixI(2 * i, j) = 1; //for xi
				ConstraintsMatrixI(2 * i + 1, j) = -1; //for -xi
			} else { //for all other elements assign zeros
				ConstraintsMatrixI(2 * i, j) = 0; //for xi
				ConstraintsMatrixI(2 * i + 1, j) = 0; //for -xi
			}
		}
		if (i < 8) { //x1  to x8
			boundValueI[2 * i] = 0.1;
			boundValueI[2 * i + 1] = 0;
		}
		if ((i >= 8) && (i < col)) { //x9  to x28
			boundValueI[2 * i] = 0;
			boundValueI[2 * i + 1] = 0;
		}
		/*if ((i >= col - 1) && (i < col)) {		//only t
		 boundValueI[2 * i] = 0;
		 boundValueI[2 * i + 1] = 0;
		 }*/
	}

	boundSignI = 1;
// Trying to give an universe invariant
//
//	row = 28;
//	col = 28;
//	invariantConstraintsMatrix.resize(row, col);
//	invariantBoundValue.resize(row);
//	for (int i = 0; i < row; i++) {
//		for (int j = 0; j < col; j++) {
//			invariantConstraintsMatrix(i, j) = 0.0;			//for xi
//		}
//		invariantBoundValue[i] = 0;
//	}
//	invariantBoundSign = 1;
//		invariant.setPolytope(invariantConstraintsMatrix, invariantBoundValue,
//				invariantBoundSign);

//	invariant.setIsUniverse(true);

	/*
	 invariantConstraintsMatrix(28, 28) = 1;
	 invariantBoundValue[28] = reach_parameters.TimeBound;	//<= timebound
	 */

	/*
	 cout << "\nPrinting The Invariant matrix A <= b\n";
	 for (int i = 0; i < row; i++) {
	 for (int j = 0; j < col; j++) {
	 cout << invariantConstraintsMatrix(i, j) << "\t";
	 }
	 cout << invariantBoundValue[i] << endl<<endl;
	 }
	 */
	//invariant.setIsUniverse(true);	//
	// Invariant Initialised above
	std::ofstream MatLabfile, MatLabfile2;
	//file for making matrix 'A' for MatLab output function con2vert(A,b) to be executed from plotoutput.m
	MatLabfile.open("/home/amit/matlabTest/ProjectOutput/MatrixA_file.txt");
	MatLabfile2.open("/home/amit/matlabTest/ProjectOutput/MatrixB_file.txt");
	for (unsigned int i = 0; i < ConstraintsMatrixI.size1(); i++) {
		for (unsigned int j = 0; j < ConstraintsMatrixI.size2(); j++) {
			MatLabfile << ConstraintsMatrixI(i, j) << " ";
		}
		MatLabfile << std::endl;
		MatLabfile2 << boundValueI[i] << std::endl;
	}
	MatLabfile.close();
	MatLabfile2.close();

	// Initial Polytope is initialised
	//initial_polytope_I.setPolytope(ConstraintsMatrixI, boundValueI, boundSignI);
	initial_polytope_I = polytope::ptr(
			new polytope(ConstraintsMatrixI, boundValueI, boundSignI));
	//--------------

	//gaurd_polytope.setPolytope(gaurdConstraintsMatrix, gaurdBoundValue, gaurdBoundSign);
//Matrix_U to be parsed for generating Matrix_B
	string Matrix_U(
			

	boost::char_separator<char> sep(", "); //, and " " a single space is the separator
	boost::tokenizer<boost::char_separator<char> > tok(Matrix_U, sep);
	//   tokenizer<> tok(s);
	//   for(tokenizer<boost::char_separator<double> >::iterator beg=tok.begin(); beg!=tok.end();++beg){
	row = 28; //x1 to x28 and then last row for t==0
	col = 6; //u1 to u6 columns and last col for t==0
	Bmatrix.resize(row, col);
	unsigned int index_i = 0, index_j = 0;
	BOOST_FOREACH (const string& t, tok) {
		try {
			double value = boost::lexical_cast<double>(t);
			Bmatrix(index_i, index_j) = value;
			index_j++;
			if (index_j == col) {
				//Bmatrix(index_i, index_j) = 0.000000000000;	//ADDING t==0 column
				index_j = 0;
				index_i++;
			}
			if (index_i == row)
				break;
		} catch (boost::bad_lexical_cast&) {
			cout << t << " -- Error converting the Model Matrix_U\n";
		}
	}
	/*
	 for (int j = 0; j < col - 1; j++)
	 Bmatrix(28, j) = 0.000000000000;	//Last row for t==0
	 //Bmatrix(28, col - 1) = 1;		//try = 0 also
	 Bmatrix(28, col - 1) = 0.000000000000;		//try = 0 also
	 */

	/*	cout << "\nPrinting The B matrix\n";
	 for (unsigned int i = 0; i < row; i++) {
	 for (unsigned int j = 0; j < col; j++) {
	 cout << Bmatrix(i, j) << "\t";
	 }
	 cout << endl << endl << endl;
	 }*/

	/*
	 string matrix_au(
	
	 */
	string Matrix_A(
			"0.000000000000, 0.000000000000, 0.000000000000, 0.998573780060, 0.053384274244, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 1.000000000000, -0.003182219341, 0.059524655342, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -11.570495605469, -2.544637680054, -0.063602626324, 0.106780529022, -0.094918668270, 0.007107574493, -3.700790207851, -16.213284674534, -2.984968535139, -0.493137919288, -1.186954196152, -0.031106608756, 0.024595252653, 0.008231369923, 0.231787619674, 0.745302732591, 7.895709940231, 2.026930360369, 0.271792657736, 0.315196108541, 0.015876847710, 0.009288507454, 0.087920280806, -0.103727794204, -4.447282126346, 0.016271459306, 0.000000000000, 0.000000000000, 0.439356565475, -1.998182296753, 0.0, 0.016651883721, 0.018462046981, -0.001187470742, -7.517319654181, 0.236494174025, -0.028725044803, -2.442989538035, 0.034510550810, -0.004683216652, -0.005154038690, -0.002104275246, -0.079935853309, 1.420125114638, -0.117856066698, -0.226142434271, -0.002585832387, -0.001365917341, 0.035962654791, 0.028993699893, -0.045896888864, 0.716358354284, 0.029085601036, -0.001242728387, 0.000000000000, 0.000000000000, -2.040895462036, -0.458999156952, -0.735027790070, 0.019255757332, -0.004595622420, 0.002120360732, -0.740775522612, -2.555714688932, -0.339301128908, -0.033104023297, -1.446467788369, -0.007442776396, -0.000012314482, 0.030657946816, 1.002118140789, 0.153644862643, 1.273828227991, 1.983204935524, 0.048757213739, 0.060295617991, 0.001605314985, 0.000554368427, 0.475422075598, -0.010880647601, -0.775712358056, -0.408545111762, -32.103607177734, 0.0, -0.503355026245, 2.297859191895, 0.0, -0.021215811372, -0.021167919040, 0.015811592340, 8.689411857722, -0.215429806172, 0.063500560122, 2.847523923644, -0.297021616015, 0.001323463163, 0.002124820781, 0.068860932948, 1.694077894544, -1.639571645676, 0.110652545728, 0.728735301618, 0.003107735169, 0.003335187976, -0.042347579477, -0.034247794709, 0.469091132962, -0.814424502262, -0.018082452136, 0.016747349252, 0.102161169052, 32.057830810547, -2.347217559814, -0.503611564636, 0.834947586060, 0.021226570010, -0.037879735231, 0.000354003860, -0.560681623936, -3.574948145694, -0.788176766644, -0.107590635594, 0.908657075077, -0.008720966051, 0.005669792925, 0.044884407612, 0.788227489086, 0.111065913657, 1.709840089441, -0.946574755181, 0.054255711842, 0.060392345409, 0.003299051857, 0.001965592530, -0.035607238660, -0.021984114632, -0.893130060176, 0.503048977806, -1.910972595215, 1.713829040527, -0.004005432129, -0.057411193848, 0.0, 0.013989634812, -0.000906753354,  -0.290513515472, -1.440209153996, -1.089782421583, -0.599051729911, -0.930901394778, 5.044060722850, 0.079229241316, 0.074101747848, -1.301808243838, -31.393874531397, 0.233327947688, 0.478559456452, -9.198865975131, -0.002820980233, -0.034669033757, 0.022125233836, 0.019923408940, -8.159414332666, -0.129736796488, -0.298841506489, -0.300193732750, 0.050176870833, -0.003161246171, -0.486165175190, 0.266534777047, 0.003826227932, 0.000001339204, 0.000001199431, -0.000022435600, -0.020657323970, 0.001301453941, 0.213359280279, 0.881596311923, 0.051809053856, -0.000000551337, -0.000000493794, 0.000009236516, -0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.019757788570, 0.009012833714, 0.311015942657, 2.810181204790, -0.001602140073, -0.000000613279, -0.000000549271, 0.000010274224, 0.008134087133, -0.003710494952, 0.863507011470, -1.236460821044, 0.060184240645, 0.000000252481, 0.000000226129, -0.000004229797, -0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.030385323449, 0.003110159427, 0.312812882924, 0.287354391281, -0.002331730630, -0.000000824205, -0.000000738183, 0.000013807861, -8.414922645141, -36.922139523656, -18.505141519315, -3.793715804769, -2.765572372983, 0.035944961732, -0.038910104720, 0.025846348888, 0.527826299191, 1.697201876759, 17.980094722474, 4.615721721183, 0.618925691035, 0.717763941510, 0.036154725527, 0.021151770407, 0.200211885807, -0.236208723376, -10.127341872304, 0.037053334254, 0.002667394037, 0.004496152836, 0.045956750452, 1.764514260408, 0.000146052012, 0.000000019584, 0.000000017540, -0.000000328097, -17.119523267503, 0.536693033369, 0.353775293385, -8.335731095093, 0.078527228401, 0.005987264162, 0.006725273267, -0.005979187005, -0.182029763642, 3.233906041666, -0.268381596955, -0.514971094398, -0.005888452287, -0.003110464210, 0.081894084826, 0.066024394813, -0.104516302587, 1.631289796960, 0.066233671911, -0.002829938571, 0.024056576806, -0.001361685819, -0.230715295944, 0.185551143531, 0.001832537128, 0.000000640359, 0.000000573525, -0.000010727892, -1.696796379292, -5.819307733117, -2.712299197847, -0.615817527040, -4.029675752634, 0.002306818331, -0.004623901048, 0.071938991843, 2.282021405408, 0.349879770769, 2.900759066988, 4.516150272075, 0.111029828612, 0.137305059460, 0.003655620040, 0.001262406662, 1.082630189953, -0.024777388732, -1.766450614425, -0.930338103031, -1.753103616578, 0.521869609890, 23.319318958026, 145.082271971311, -0.138741289403, -0.000051341929, -0.000045983385, 0.000860128319, -11.594360544437, -0.705424902410, -10.592707880324, -54.888617486514, -0.619258600252, -0.018180886764, -0.016310350542, 0.172267463350, 3.857750758541, -3.733629238750, 0.251977753557, 1.659474556422, 0.007076928248, 0.007594883320, -0.096433822422, -0.077989008913, 1.068213380174, -1.854605830991, -0.041177323469, 0.038137029879, 1.708539622488, 0.111898315003, -13.174473231922, 91.462755556230, 0.127584976026, 0.000043171229, 0.000038665459, -0.000723245056, -1.878010842263, 23.870898681235, 1.639719754761, -40.888303474223, 2.851614162302, 0.001349430570, -0.024984412428, 0.102862439056, 1.794950045519, 0.252919074168, 3.893644396914, -2.155538119928, 0.123550997381, 0.137525326941, 0.007512594224, 0.004476043338, -0.081084731931, -0.050062181420, -2.033833968448, 1.145542115841, -0.069753861204, 0.041269247265, 1.243498527057, 13.467483657041, -0.005772466581, -0.000002269708, -0.000002032820, 0.000038024292, -5.161896992464, -0.784811430978, -1.913888711445, -8.087612492321, 11.488701354150, 0.194411237470, 0.167838434014, -3.255004272242, -71.490067651024, 0.531333931032, 1.089774627294, -20.947639012098, -0.006423930487, -0.078948253623, 0.050383537787, 0.045369546582, -18.580601832107, -0.295436370828, -0.680521274763, -0.683600561672, -0.000000000000, -0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, -0.013549327978, -0.012135188033, 0.226991094595, 0.000000000000, 0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.012000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -11.385989897412, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.005000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -4.554395958965, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.005000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, 0.243569095885, -4.554395958965, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, -0.010000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -4.554395958965, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, -8.500000000000, -18.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, -0.000000000000, -0.000000000000, 0.000000000000, 0.000000000000, 1.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -11.385989897412, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -8.500000000000, -18.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 1.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.683186075980, 0.514736886625, 0.282998565164, 0.440668616363, -2.382738811465, -0.037424700426, -0.035002491999, 0.614952694278, 14.829958398888, -0.110759742503, -0.226034186438, 4.345468653096, 0.001333027828, 0.016376955559, -0.010465240818, -0.009422482600, -6.145615181050, 0.061014181775, 0.141165339638, 0.141806743312, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, -36.039354729710, 0.767400874818, -0.190879388177, -11.678174370212, -0.041149877278, -0.026017271417, -0.026698725144, 0.036415219598, 0.738656358350, 6.810845841283, -0.384784957980, -0.708557300741, -0.005524328707, 0.002522572903, 0.171826920583, 0.138368426838, 0.071909684799, -6.567495145681, 0.039293511274, 0.006041152866, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 1.997224587333, 13.482210983798, 2.488520358003, 0.076750797248, 0.804972334222, 0.023466195202, -0.022740687251, 0.018646161041, 0.436604617107, -0.414374632569, -6.563020897889, -1.423460802051, -0.224998971426, -0.259852011779, -0.008437464875, -0.003945344110, 0.102235829031, 0.191829027845, -6.312428841540, -0.038075090345, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 1.761524247668, -3.415298165208, -1.836225244248, -0.015605131825, 10.486845595600, -0.031379180918, 0.001266746410, 0.525873993847, 9.808565668907, -0.367529750255, 1.370405524130, -12.076970057329, 0.004883176776, -0.015765473705, -0.000399777933, -0.000497333312, 0.199818976539, -0.002648145523, -0.101212258081, -5.199268943788");

	//Initialize matrix A of dimension 29 x 29
	row = 28;
	col = 28;
	Amatrix.resize(row, col);
	unsigned int i = 0, j = 0;
	boost::char_separator<char> delimet(", "); //, and " " a single space is the separator
	boost::tokenizer<boost::char_separator<char> > token(Matrix_A, delimet);
	BOOST_FOREACH (const string& tex, token) {
		try {
			double val = boost::lexical_cast<double>(tex);
			Amatrix(i, j) = val;
			j++;
			if (j == col) {
				//Amatrix(i, j) = 0.000000000000;		//t=0 column
				j = 0;
				i++;
			}
			if (i == row)
				break;
		} catch (boost::bad_lexical_cast &) {
			cout << tex << " -- Error converting the Model Matrix_A\n";
		}
	}

	/*
	 for (int j = 0; j < col; j++)
	 Amatrix(28, j) = 0.000000000000;	//Last row for t==0
	 */

	/*
	 cout << "\nPrinting The A matrix\n";
	 for (unsigned int i = 0; i < row; i++) {
	 for (unsigned int j = 0; j < col; j++) {
	 cout << Amatrix(i, j) << "\t";
	 }
	 cout << endl;
	 }
	 */

	/*
	 cout << "\nPrinting The AU matrix\n";
	 for (int i = 0; i < row; i++) {
	 for (int j = 0; j < col; j++) {
	 cout << AUmatrix(i, j) << "\t";
	 }
	 cout << endl << endl << endl;
	 }
	 */

	invariant = polytope::ptr(new polytope()); //creating an universe polytope
	invariant->setIsEmpty(true);

	system_dynamics.isEmptyMatrixA = false;
	system_dynamics.MatrixA = Amatrix;

	system_dynamics.isEmptyMatrixB = false;
	system_dynamics.MatrixB = Bmatrix;

	system_dynamics.isEmptyC = true;

	system_dynamics.U = polytope::ptr(new polytope()); //empty polytope is set by default
	system_dynamics.U->setIsEmpty(true); //set empty = true which is by default

//	system_dynamics.U.setPolytope(ConstraintsMatrixV, boundValueV, boundSignV);	//set empty = true which is by default
//	Dynamics Initalised ---------------------

	transition::ptr trans = transition::ptr(new transition()); //empty transition

	location::ptr source;
	source = location::ptr(new location());
	source->setLocId(1);
	source->setName("Flying");
	source->setSystem_Dynamics(system_dynamics);
	source->setInvariant(invariant);
	source->setInvariantExists(false); //no invariant available
	source->add_Out_Going_Transition(trans);

	int dim = initial_polytope_I->getSystemDimension();

	Hybrid_Automata.addInitial_Location(source);
	Hybrid_Automata.addLocation(source);
	Hybrid_Automata.setDimension(dim);

	Hybrid_Automata.insert_to_map("x1", 0);
	Hybrid_Automata.insert_to_map("x2", 1);
	Hybrid_Automata.insert_to_map("x3", 2);
	Hybrid_Automata.insert_to_map("x4", 3);
	Hybrid_Automata.insert_to_map("x5", 4);
	Hybrid_Automata.insert_to_map("x6", 5);
	Hybrid_Automata.insert_to_map("x7", 6);
	Hybrid_Automata.insert_to_map("x8", 7);
	Hybrid_Automata.insert_to_map("x9", 8);
	Hybrid_Automata.insert_to_map("x10", 10);
	Hybrid_Automata.insert_to_map("x11", 10);
	Hybrid_Automata.insert_to_map("x12", 11);
	Hybrid_Automata.insert_to_map("x13", 12);
	Hybrid_Automata.insert_to_map("x14", 13);
	Hybrid_Automata.insert_to_map("x15", 14);
	Hybrid_Automata.insert_to_map("x16", 15);
	Hybrid_Automata.insert_to_map("x17", 16);
	Hybrid_Automata.insert_to_map("x18", 17);
	Hybrid_Automata.insert_to_map("x19", 18);
	Hybrid_Automata.insert_to_map("x20", 19);
	Hybrid_Automata.insert_to_map("x21", 20);
	Hybrid_Automata.insert_to_map("x22", 21);
	Hybrid_Automata.insert_to_map("x23", 22);
	Hybrid_Automata.insert_to_map("x24", 23);
	Hybrid_Automata.insert_to_map("x25", 24);
	Hybrid_Automata.insert_to_map("x26", 25);
	Hybrid_Automata.insert_to_map("x27", 26);
	Hybrid_Automata.insert_to_map("x28", 27);

	unsigned int initial_location_id = 1; //the initial Location ID
	symbolic_states::ptr S; //null_pointer as there is no instantiation
	int transition_id = 0; //initial location no transition taken yet
	initial_state::ptr I = initial_state::ptr(
			new initial_state(initial_location_id, initial_polytope_I, S,
					transition_id));

	init_state_list.push_back(I);
}

//Hyst Generated output
void SetHelicopter_Parameters3InCorrect(hybrid_automata& Hybrid_Automata,
		std::list<initial_state::ptr>& init_state_list,
		ReachabilityParameters& reach_parameters) {

	typedef typename boost::numeric::ublas::matrix<double>::size_type size_type;

	polytope::ptr initial_polytope_I;

	polytope::ptr invariant0;

	polytope::ptr gaurd_polytope0;

	Dynamics system_dynamics0;

	math::matrix<double> ConstraintsMatrixI, ConstraintsMatrixV0,
			invariantConstraintsMatrix0, gaurdConstraintsMatrix0, A0matrix,
			B0matrix;

	std::vector<double> boundValueI, boundValueV0, C0, invariantBoundValue0,
			gaurdBoundValue0;

	int boundSignI, invariantBoundSign, gaurdBoundSign, boundSignV;

	size_type row, col;

// The mode name is  ticking_idle

	row = 29;
	col = 29;
	A0matrix.resize(row, col);
	A0matrix(0, 0) = 0.0;
	A0matrix(0, 1) = 0.0;
	A0matrix(0, 2) = 0.0;
	A0matrix(0, 3) = 0.0;
	A0matrix(0, 4) = 0.0;
	A0matrix(0, 5) = 0.0;
	A0matrix(0, 6) = 0.0;
	A0matrix(0, 7) = 0.0;
	A0matrix(0, 8) = 0.0;
	A0matrix(0, 9) = 0.0;
	A0matrix(0, 10) = 0.0;
	A0matrix(0, 11) = 0.0;
	A0matrix(0, 12) = 0.0;
	A0matrix(0, 13) = 0.0;
	A0matrix(0, 14) = 0.0;
	A0matrix(0, 15) = 0.0;
	A0matrix(0, 16) = 0.0;
	A0matrix(0, 17) = 0.0;
	A0matrix(0, 18) = 0.0;
	A0matrix(0, 19) = 0.0;
	A0matrix(0, 20) = 0.0;
	A0matrix(0, 21) = 0.0;
	A0matrix(0, 22) = 0.0;
	A0matrix(0, 23) = 0.0;
	A0matrix(0, 24) = 0.0;
	A0matrix(0, 25) = 0.0;
	A0matrix(0, 26) = 0.0;
	A0matrix(0, 27) = 0.0;
	A0matrix(0, 28) = 0.0;
	A0matrix(1, 0) = 0.0;
	A0matrix(1, 1) = 0.0;
	A0matrix(1, 2) = 0.0;
	A0matrix(1, 3) = 0.0;
	A0matrix(1, 4) = 0.99857378006;
	A0matrix(1, 5) = 0.053384274244;
	A0matrix(1, 6) = 0.0;
	A0matrix(1, 7) = 0.0;
	A0matrix(1, 8) = 0.0;
	A0matrix(1, 9) = 0.0;
	A0matrix(1, 10) = 0.0;
	A0matrix(1, 11) = 0.0;
	A0matrix(1, 12) = 0.0;
	A0matrix(1, 13) = 0.0;
	A0matrix(1, 14) = 0.0;
	A0matrix(1, 15) = 0.0;
	A0matrix(1, 16) = 0.0;
	A0matrix(1, 17) = 0.0;
	A0matrix(1, 18) = 0.0;
	A0matrix(1, 19) = 0.0;
	A0matrix(1, 20) = 0.0;
	A0matrix(1, 21) = 0.0;
	A0matrix(1, 22) = 0.0;
	A0matrix(1, 23) = 0.0;
	A0matrix(1, 24) = 0.0;
	A0matrix(1, 25) = 0.0;
	A0matrix(1, 26) = 0.0;
	A0matrix(1, 27) = 0.0;
	A0matrix(1, 28) = 0.0;
	A0matrix(2, 0) = 0.0;
	A0matrix(2, 1) = 0.0;
	A0matrix(2, 2) = 0.0;
	A0matrix(2, 3) = 1.0;
	A0matrix(2, 4) = -0.003182219341;
	A0matrix(2, 5) = 0.059524655342;
	A0matrix(2, 6) = 0.0;
	A0matrix(2, 7) = 0.0;
	A0matrix(2, 8) = 0.0;
	A0matrix(2, 9) = 0.0;
	A0matrix(2, 10) = 0.0;
	A0matrix(2, 11) = 0.0;
	A0matrix(2, 12) = 0.0;
	A0matrix(2, 13) = 0.0;
	A0matrix(2, 14) = 0.0;
	A0matrix(2, 15) = 0.0;
	A0matrix(2, 16) = 0.0;
	A0matrix(2, 17) = 0.0;
	A0matrix(2, 18) = 0.0;
	A0matrix(2, 19) = 0.0;
	A0matrix(2, 20) = 0.0;
	A0matrix(2, 21) = 0.0;
	A0matrix(2, 22) = 0.0;
	A0matrix(2, 23) = 0.0;
	A0matrix(2, 24) = 0.0;
	A0matrix(2, 25) = 0.0;
	A0matrix(2, 26) = 0.0;
	A0matrix(2, 27) = 0.0;
	A0matrix(2, 28) = 0.0;
	A0matrix(3, 0) = 0.0;
	A0matrix(3, 1) = 0.0;
	A0matrix(3, 2) = 0.0;
	A0matrix(3, 3) = -11.570495605469;
	A0matrix(3, 4) = -2.544637680054;
	A0matrix(3, 5) = -0.063602626324;
	A0matrix(3, 6) = 0.106780529022;
	A0matrix(3, 7) = -0.09491866827;
	A0matrix(3, 8) = 0.007107574493;
	A0matrix(3, 9) = -3.700790207851;
	A0matrix(3, 10) = -16.213284674534;
	A0matrix(3, 11) = -2.984968535139;
	A0matrix(3, 12) = -0.493137919288;
	A0matrix(3, 13) = -1.186954196152;
	A0matrix(3, 14) = -0.031106608756;
	A0matrix(3, 15) = 0.024595252653;
	A0matrix(3, 16) = 0.008231369923;
	A0matrix(3, 17) = 0.231787619674;
	A0matrix(3, 18) = 0.745302732591;
	A0matrix(3, 19) = 7.895709940231;
	A0matrix(3, 20) = 2.026930360369;
	A0matrix(3, 21) = 0.271792657736;
	A0matrix(3, 22) = 0.315196108541;
	A0matrix(3, 23) = 0.01587684771;
	A0matrix(3, 24) = 0.009288507454;
	A0matrix(3, 25) = 0.087920280806;
	A0matrix(3, 26) = -0.103727794204;
	A0matrix(3, 27) = -4.447282126346;
	A0matrix(3, 28) = 0.016271459306;
	A0matrix(4, 0) = 0.0;
	A0matrix(4, 1) = 0.0;
	A0matrix(4, 2) = 0.0;
	A0matrix(4, 3) = 0.439356565475;
	A0matrix(4, 4) = -1.998182296753;
	A0matrix(4, 5) = 0.0;
	A0matrix(4, 6) = 0.016651883721;
	A0matrix(4, 7) = 0.018462046981;
	A0matrix(4, 8) = -0.001187470742;
	A0matrix(4, 9) = -7.517319654181;
	A0matrix(4, 10) = 0.236494174025;
	A0matrix(4, 11) = -0.028725044803;
	A0matrix(4, 12) = -2.442989538035;
	A0matrix(4, 13) = 0.03451055081;
	A0matrix(4, 14) = -0.004683216652;
	A0matrix(4, 15) = -0.00515403869;
	A0matrix(4, 16) = -0.002104275246;
	A0matrix(4, 17) = -0.079935853309;
	A0matrix(4, 18) = 1.420125114638;
	A0matrix(4, 19) = -0.117856066698;
	A0matrix(4, 20) = -0.226142434271;
	A0matrix(4, 21) = -0.002585832387;
	A0matrix(4, 22) = -0.001365917341;
	A0matrix(4, 23) = 0.035962654791;
	A0matrix(4, 24) = 0.028993699893;
	A0matrix(4, 25) = -0.045896888864;
	A0matrix(4, 26) = 0.716358354284;
	A0matrix(4, 27) = 0.029085601036;
	A0matrix(4, 28) = -0.001242728387;
	A0matrix(5, 0) = 0.0;
	A0matrix(5, 1) = 0.0;
	A0matrix(5, 2) = 0.0;
	A0matrix(5, 3) = -2.040895462036;
	A0matrix(5, 4) = -0.458999156952;
	A0matrix(5, 5) = -0.73502779007;
	A0matrix(5, 6) = 0.019255757332;
	A0matrix(5, 7) = -0.00459562242;
	A0matrix(5, 8) = 0.002120360732;
	A0matrix(5, 9) = -0.740775522612;
	A0matrix(5, 10) = -2.555714688932;
	A0matrix(5, 11) = -0.339301128908;
	A0matrix(5, 12) = -0.033104023297;
	A0matrix(5, 13) = -1.446467788369;
	A0matrix(5, 14) = -0.007442776396;
	A0matrix(5, 15) = -1.2314482E-5;
	A0matrix(5, 16) = 0.030657946816;
	A0matrix(5, 17) = 1.002118140789;
	A0matrix(5, 18) = 0.153644862643;
	A0matrix(5, 19) = 1.273828227991;
	A0matrix(5, 20) = 1.983204935524;
	A0matrix(5, 21) = 0.048757213739;
	A0matrix(5, 22) = 0.060295617991;
	A0matrix(5, 23) = 0.001605314985;
	A0matrix(5, 24) = 5.54368427E-4;
	A0matrix(5, 25) = 0.475422075598;
	A0matrix(5, 26) = -0.010880647601;
	A0matrix(5, 27) = -0.775712358056;
	A0matrix(5, 28) = -0.408545111762;
	A0matrix(6, 0) = 0.0;
	A0matrix(6, 1) = -32.103607177734;
	A0matrix(6, 2) = 0.0;
	A0matrix(6, 3) = -0.503355026245;
	A0matrix(6, 4) = 2.297859191895;
	A0matrix(6, 5) = 0.0;
	A0matrix(6, 6) = -0.021215811372;
	A0matrix(6, 7) = -0.02116791904;
	A0matrix(6, 8) = 0.01581159234;
	A0matrix(6, 9) = 8.689411857722;
	A0matrix(6, 10) = -0.215429806172;
	A0matrix(6, 11) = 0.063500560122;
	A0matrix(6, 12) = 2.847523923644;
	A0matrix(6, 13) = -0.297021616015;
	A0matrix(6, 14) = 0.001323463163;
	A0matrix(6, 15) = 0.002124820781;
	A0matrix(6, 16) = 0.068860932948;
	A0matrix(6, 17) = 1.694077894544;
	A0matrix(6, 18) = -1.639571645676;
	A0matrix(6, 19) = 0.110652545728;
	A0matrix(6, 20) = 0.728735301618;
	A0matrix(6, 21) = 0.003107735169;
	A0matrix(6, 22) = 0.003335187976;
	A0matrix(6, 23) = -0.042347579477;
	A0matrix(6, 24) = -0.034247794709;
	A0matrix(6, 25) = 0.469091132962;
	A0matrix(6, 26) = -0.814424502262;
	A0matrix(6, 27) = -0.018082452136;
	A0matrix(6, 28) = 0.016747349252;
	A0matrix(7, 0) = 0.0;
	A0matrix(7, 1) = 0.102161169052;
	A0matrix(7, 2) = 32.057830810547;
	A0matrix(7, 3) = -2.347217559814;
	A0matrix(7, 4) = -0.503611564636;
	A0matrix(7, 5) = 0.83494758606;
	A0matrix(7, 6) = 0.02122657001;
	A0matrix(7, 7) = -0.037879735231;
	A0matrix(7, 8) = 3.5400386E-4;
	A0matrix(7, 9) = -0.560681623936;
	A0matrix(7, 10) = -3.574948145694;
	A0matrix(7, 11) = -0.788176766644;
	A0matrix(7, 12) = -0.107590635594;
	A0matrix(7, 13) = 0.908657075077;
	A0matrix(7, 14) = -0.008720966051;
	A0matrix(7, 15) = 0.005669792925;
	A0matrix(7, 16) = 0.044884407612;
	A0matrix(7, 17) = 0.788227489086;
	A0matrix(7, 18) = 0.111065913657;
	A0matrix(7, 19) = 1.709840089441;
	A0matrix(7, 20) = -0.946574755181;
	A0matrix(7, 21) = 0.054255711842;
	A0matrix(7, 22) = 0.060392345409;
	A0matrix(7, 23) = 0.003299051857;
	A0matrix(7, 24) = 0.00196559253;
	A0matrix(7, 25) = -0.03560723866;
	A0matrix(7, 26) = -0.021984114632;
	A0matrix(7, 27) = -0.893130060176;
	A0matrix(7, 28) = 0.503048977806;
	A0matrix(8, 0) = 0.0;
	A0matrix(8, 1) = -1.910972595215;
	A0matrix(8, 2) = 1.713829040527;
	A0matrix(8, 3) = -0.004005432129;
	A0matrix(8, 4) = -0.057411193848;
	A0matrix(8, 5) = 0.0;
	A0matrix(8, 6) = 0.013989634812;
	A0matrix(8, 7) = -9.06753354E-4;
	A0matrix(8, 8) = -0.290513515472;
	A0matrix(8, 9) = -1.440209153996;
	A0matrix(8, 10) = -1.089782421583;
	A0matrix(8, 11) = -0.599051729911;
	A0matrix(8, 12) = -0.930901394778;
	A0matrix(8, 13) = 5.04406072285;
	A0matrix(8, 14) = 0.079229241316;
	A0matrix(8, 15) = 0.074101747848;
	A0matrix(8, 16) = -1.301808243838;
	A0matrix(8, 17) = -31.393874531397;
	A0matrix(8, 18) = 0.233327947688;
	A0matrix(8, 19) = 0.478559456452;
	A0matrix(8, 20) = -9.198865975131;
	A0matrix(8, 21) = -0.002820980233;
	A0matrix(8, 22) = -0.034669033757;
	A0matrix(8, 23) = 0.022125233836;
	A0matrix(8, 24) = 0.01992340894;
	A0matrix(8, 25) = -8.159414332666;
	A0matrix(8, 26) = -0.129736796488;
	A0matrix(8, 27) = -0.298841506489;
	A0matrix(8, 28) = -0.30019373275;
	A0matrix(9, 0) = 0.0;
	A0matrix(9, 1) = 0.050176870833;
	A0matrix(9, 2) = -0.003161246171;
	A0matrix(9, 3) = -0.48616517519;
	A0matrix(9, 4) = 0.266534777047;
	A0matrix(9, 5) = 0.003826227932;
	A0matrix(9, 6) = 1.339204E-6;
	A0matrix(9, 7) = 1.199431E-6;
	A0matrix(9, 8) = -2.24356E-5;
	A0matrix(9, 9) = -0.02065732397;
	A0matrix(9, 10) = 0.001301453941;
	A0matrix(9, 11) = 0.213359280279;
	A0matrix(9, 12) = 0.881596311923;
	A0matrix(9, 13) = 0.051809053856;
	A0matrix(9, 14) = -5.51337E-7;
	A0matrix(9, 15) = -4.93794E-7;
	A0matrix(9, 16) = 9.236516E-6;
	A0matrix(9, 17) = 0.0;
	A0matrix(9, 18) = 0.0;
	A0matrix(9, 19) = 0.0;
	A0matrix(9, 20) = 0.0;
	A0matrix(9, 21) = 0.0;
	A0matrix(9, 22) = 0.0;
	A0matrix(9, 23) = 0.0;
	A0matrix(9, 24) = 0.0;
	A0matrix(9, 25) = 0.0;
	A0matrix(9, 26) = 0.0;
	A0matrix(9, 27) = 0.0;
	A0matrix(9, 28) = 0.0;
	A0matrix(10, 0) = 0.0;
	A0matrix(10, 1) = -0.01975778857;
	A0matrix(10, 2) = 0.009012833714;
	A0matrix(10, 3) = 0.311015942657;
	A0matrix(10, 4) = 2.81018120479;
	A0matrix(10, 5) = -0.001602140073;
	A0matrix(10, 6) = -6.13279E-7;
	A0matrix(10, 7) = -5.49271E-7;
	A0matrix(10, 8) = 1.0274224E-5;
	A0matrix(10, 9) = 0.008134087133;
	A0matrix(10, 10) = -0.003710494952;
	A0matrix(10, 11) = 0.86350701147;
	A0matrix(10, 12) = -1.236460821044;
	A0matrix(10, 13) = 0.060184240645;
	A0matrix(10, 14) = 2.52481E-7;
	A0matrix(10, 15) = 2.26129E-7;
	A0matrix(10, 16) = -4.229797E-6;
	A0matrix(10, 17) = 0.0;
	A0matrix(10, 18) = 0.0;
	A0matrix(10, 19) = 0.0;
	A0matrix(10, 20) = 0.0;
	A0matrix(10, 21) = 0.0;
	A0matrix(10, 22) = 0.0;
	A0matrix(10, 23) = 0.0;
	A0matrix(10, 24) = 0.0;
	A0matrix(10, 25) = 0.0;
	A0matrix(10, 26) = 0.0;
	A0matrix(10, 27) = 0.0;
	A0matrix(10, 28) = 0.0;
	A0matrix(11, 0) = 0.0;
	A0matrix(11, 1) = -0.030385323449;
	A0matrix(11, 2) = 0.003110159427;
	A0matrix(11, 3) = 0.312812882924;
	A0matrix(11, 4) = 0.287354391281;
	A0matrix(11, 5) = -0.00233173063;
	A0matrix(11, 6) = -8.24205E-7;
	A0matrix(11, 7) = -7.38183E-7;
	A0matrix(11, 8) = 1.3807861E-5;
	A0matrix(11, 9) = -8.414922645141;
	A0matrix(11, 10) = -36.922139523656;
	A0matrix(11, 11) = -18.505141519315;
	A0matrix(11, 12) = -3.793715804769;
	A0matrix(11, 13) = -2.765572372983;
	A0matrix(11, 14) = 0.035944961732;
	A0matrix(11, 15) = -0.03891010472;
	A0matrix(11, 16) = 0.025846348888;
	A0matrix(11, 17) = 0.527826299191;
	A0matrix(11, 18) = 1.697201876759;
	A0matrix(11, 19) = 17.980094722474;
	A0matrix(11, 20) = 4.615721721183;
	A0matrix(11, 21) = 0.618925691035;
	A0matrix(11, 22) = 0.71776394151;
	A0matrix(11, 23) = 0.036154725527;
	A0matrix(11, 24) = 0.021151770407;
	A0matrix(11, 25) = 0.200211885807;
	A0matrix(11, 26) = -0.236208723376;
	A0matrix(11, 27) = -10.127341872304;
	A0matrix(11, 28) = 0.037053334254;
	A0matrix(12, 0) = 0.0;
	A0matrix(12, 1) = 0.002667394037;
	A0matrix(12, 2) = 0.004496152836;
	A0matrix(12, 3) = 0.045956750452;
	A0matrix(12, 4) = 1.764514260408;
	A0matrix(12, 5) = 1.46052012E-4;
	A0matrix(12, 6) = 1.9584E-8;
	A0matrix(12, 7) = 1.754E-8;
	A0matrix(12, 8) = -3.28097E-7;
	A0matrix(12, 9) = -17.119523267503;
	A0matrix(12, 10) = 0.536693033369;
	A0matrix(12, 11) = 0.353775293385;
	A0matrix(12, 12) = -8.335731095093;
	A0matrix(12, 13) = 0.078527228401;
	A0matrix(12, 14) = 0.005987264162;
	A0matrix(12, 15) = 0.006725273267;
	A0matrix(12, 16) = -0.005979187005;
	A0matrix(12, 17) = -0.182029763642;
	A0matrix(12, 18) = 3.233906041666;
	A0matrix(12, 19) = -0.268381596955;
	A0matrix(12, 20) = -0.514971094398;
	A0matrix(12, 21) = -0.005888452287;
	A0matrix(12, 22) = -0.00311046421;
	A0matrix(12, 23) = 0.081894084826;
	A0matrix(12, 24) = 0.066024394813;
	A0matrix(12, 25) = -0.104516302587;
	A0matrix(12, 26) = 1.63128979696;
	A0matrix(12, 27) = 0.066233671911;
	A0matrix(12, 28) = -0.002829938571;
	A0matrix(13, 0) = 0.0;
	A0matrix(13, 1) = 0.024056576806;
	A0matrix(13, 2) = -0.001361685819;
	A0matrix(13, 3) = -0.230715295944;
	A0matrix(13, 4) = 0.185551143531;
	A0matrix(13, 5) = 0.001832537128;
	A0matrix(13, 6) = 6.40359E-7;
	A0matrix(13, 7) = 5.73525E-7;
	A0matrix(13, 8) = -1.0727892E-5;
	A0matrix(13, 9) = -1.696796379292;
	A0matrix(13, 10) = -5.819307733117;
	A0matrix(13, 11) = -2.712299197847;
	A0matrix(13, 12) = -0.61581752704;
	A0matrix(13, 13) = -4.029675752634;
	A0matrix(13, 14) = 0.002306818331;
	A0matrix(13, 15) = -0.004623901048;
	A0matrix(13, 16) = 0.071938991843;
	A0matrix(13, 17) = 2.282021405408;
	A0matrix(13, 18) = 0.349879770769;
	A0matrix(13, 19) = 2.900759066988;
	A0matrix(13, 20) = 4.516150272075;
	A0matrix(13, 21) = 0.111029828612;
	A0matrix(13, 22) = 0.13730505946;
	A0matrix(13, 23) = 0.00365562004;
	A0matrix(13, 24) = 0.001262406662;
	A0matrix(13, 25) = 1.082630189953;
	A0matrix(13, 26) = -0.024777388732;
	A0matrix(13, 27) = -1.766450614425;
	A0matrix(13, 28) = -0.930338103031;
	A0matrix(14, 0) = 0.0;
	A0matrix(14, 1) = -1.753103616578;
	A0matrix(14, 2) = 0.52186960989;
	A0matrix(14, 3) = 23.319318958026;
	A0matrix(14, 4) = 145.082271971311;
	A0matrix(14, 5) = -0.138741289403;
	A0matrix(14, 6) = -5.1341929E-5;
	A0matrix(14, 7) = -4.5983385E-5;
	A0matrix(14, 8) = 8.60128319E-4;
	A0matrix(14, 9) = -11.594360544437;
	A0matrix(14, 10) = -0.70542490241;
	A0matrix(14, 11) = -10.592707880324;
	A0matrix(14, 12) = -54.888617486514;
	A0matrix(14, 13) = -0.619258600252;
	A0matrix(14, 14) = -0.018180886764;
	A0matrix(14, 15) = -0.016310350542;
	A0matrix(14, 16) = 0.17226746335;
	A0matrix(14, 17) = 3.857750758541;
	A0matrix(14, 18) = -3.73362923875;
	A0matrix(14, 19) = 0.251977753557;
	A0matrix(14, 20) = 1.659474556422;
	A0matrix(14, 21) = 0.007076928248;
	A0matrix(14, 22) = 0.00759488332;
	A0matrix(14, 23) = -0.096433822422;
	A0matrix(14, 24) = -0.077989008913;
	A0matrix(14, 25) = 1.068213380174;
	A0matrix(14, 26) = -1.854605830991;
	A0matrix(14, 27) = -0.041177323469;
	A0matrix(14, 28) = 0.038137029879;
	A0matrix(15, 0) = 0.0;
	A0matrix(15, 1) = 1.708539622488;
	A0matrix(15, 2) = 0.111898315003;
	A0matrix(15, 3) = -13.174473231922;
	A0matrix(15, 4) = 91.46275555623;
	A0matrix(15, 5) = 0.127584976026;
	A0matrix(15, 6) = 4.3171229E-5;
	A0matrix(15, 7) = 3.8665459E-5;
	A0matrix(15, 8) = -7.23245056E-4;
	A0matrix(15, 9) = -1.878010842263;
	A0matrix(15, 10) = 23.870898681235;
	A0matrix(15, 11) = 1.639719754761;
	A0matrix(15, 12) = -40.888303474223;
	A0matrix(15, 13) = 2.851614162302;
	A0matrix(15, 14) = 0.00134943057;
	A0matrix(15, 15) = -0.024984412428;
	A0matrix(15, 16) = 0.102862439056;
	A0matrix(15, 17) = 1.794950045519;
	A0matrix(15, 18) = 0.252919074168;
	A0matrix(15, 19) = 3.893644396914;
	A0matrix(15, 20) = -2.155538119928;
	A0matrix(15, 21) = 0.123550997381;
	A0matrix(15, 22) = 0.137525326941;
	A0matrix(15, 23) = 0.007512594224;
	A0matrix(15, 24) = 0.004476043338;
	A0matrix(15, 25) = -0.081084731931;
	A0matrix(15, 26) = -0.05006218142;
	A0matrix(15, 27) = -2.033833968448;
	A0matrix(15, 28) = 1.145542115841;
	A0matrix(16, 0) = 0.0;
	A0matrix(16, 1) = -0.069753861204;
	A0matrix(16, 2) = 0.041269247265;
	A0matrix(16, 3) = 1.243498527057;
	A0matrix(16, 4) = 13.467483657041;
	A0matrix(16, 5) = -0.005772466581;
	A0matrix(16, 6) = -2.269708E-6;
	A0matrix(16, 7) = -2.03282E-6;
	A0matrix(16, 8) = 3.8024292E-5;
	A0matrix(16, 9) = -5.161896992464;
	A0matrix(16, 10) = -0.784811430978;
	A0matrix(16, 11) = -1.913888711445;
	A0matrix(16, 12) = -8.087612492321;
	A0matrix(16, 13) = 11.48870135415;
	A0matrix(16, 14) = 0.19441123747;
	A0matrix(16, 15) = 0.167838434014;
	A0matrix(16, 16) = -3.255004272242;
	A0matrix(16, 17) = -71.490067651024;
	A0matrix(16, 18) = 0.531333931032;
	A0matrix(16, 19) = 1.089774627294;
	A0matrix(16, 20) = -20.947639012098;
	A0matrix(16, 21) = -0.006423930487;
	A0matrix(16, 22) = -0.078948253623;
	A0matrix(16, 23) = 0.050383537787;
	A0matrix(16, 24) = 0.045369546582;
	A0matrix(16, 25) = -18.580601832107;
	A0matrix(16, 26) = -0.295436370828;
	A0matrix(16, 27) = -0.680521274763;
	A0matrix(16, 28) = -0.683600561672;
	A0matrix(17, 0) = 0.0;
	A0matrix(17, 1) = 0.0;
	A0matrix(17, 2) = 0.0;
	A0matrix(17, 3) = 0.0;
	A0matrix(17, 4) = 0.0;
	A0matrix(17, 5) = 0.0;
	A0matrix(17, 6) = -0.013549327978;
	A0matrix(17, 7) = -0.012135188033;
	A0matrix(17, 8) = 0.226991094595;
	A0matrix(17, 9) = 0.0;
	A0matrix(17, 10) = 0.0;
	A0matrix(17, 11) = 0.0;
	A0matrix(17, 12) = 0.0;
	A0matrix(17, 13) = 0.0;
	A0matrix(17, 14) = 0.0;
	A0matrix(17, 15) = 0.0;
	A0matrix(17, 16) = 0.0;
	A0matrix(17, 17) = -0.012;
	A0matrix(17, 18) = 0.0;
	A0matrix(17, 19) = 0.0;
	A0matrix(17, 20) = 0.0;
	A0matrix(17, 21) = 0.0;
	A0matrix(17, 22) = 0.0;
	A0matrix(17, 23) = 0.0;
	A0matrix(17, 24) = 0.0;
	A0matrix(17, 25) = 0.0;
	A0matrix(17, 26) = 0.0;
	A0matrix(17, 27) = 0.0;
	A0matrix(17, 28) = 0.0;
	A0matrix(18, 0) = 0.0;
	A0matrix(18, 1) = -11.385989897412;
	A0matrix(18, 2) = 0.0;
	A0matrix(18, 3) = 0.0;
	A0matrix(18, 4) = 0.0;
	A0matrix(18, 5) = 0.0;
	A0matrix(18, 6) = 0.0;
	A0matrix(18, 7) = 0.0;
	A0matrix(18, 8) = 0.0;
	A0matrix(18, 9) = 0.0;
	A0matrix(18, 10) = 0.0;
	A0matrix(18, 11) = 0.0;
	A0matrix(18, 12) = 0.0;
	A0matrix(18, 13) = 0.0;
	A0matrix(18, 14) = 0.0;
	A0matrix(18, 15) = 0.0;
	A0matrix(18, 16) = 0.0;
	A0matrix(18, 17) = 0.0;
	A0matrix(18, 18) = -0.005;
	A0matrix(18, 19) = 0.0;
	A0matrix(18, 20) = 0.0;
	A0matrix(18, 21) = 0.0;
	A0matrix(18, 22) = 0.0;
	A0matrix(18, 23) = 0.0;
	A0matrix(18, 24) = 0.0;
	A0matrix(18, 25) = 0.0;
	A0matrix(18, 26) = 0.0;
	A0matrix(18, 27) = 0.0;
	A0matrix(18, 28) = 0.0;
	A0matrix(19, 0) = 0.0;
	A0matrix(19, 1) = 0.0;
	A0matrix(19, 2) = -4.554395958965;
	A0matrix(19, 3) = 0.0;
	A0matrix(19, 4) = 0.0;
	A0matrix(19, 5) = 0.0;
	A0matrix(19, 6) = 0.0;
	A0matrix(19, 7) = 0.0;
	A0matrix(19, 8) = 0.0;
	A0matrix(19, 9) = 0.0;
	A0matrix(19, 10) = 0.0;
	A0matrix(19, 11) = 0.0;
	A0matrix(19, 12) = 0.0;
	A0matrix(19, 13) = 0.0;
	A0matrix(19, 14) = 0.0;
	A0matrix(19, 15) = 0.0;
	A0matrix(19, 16) = 0.0;
	A0matrix(19, 17) = 0.0;
	A0matrix(19, 18) = 0.0;
	A0matrix(19, 19) = -0.005;
	A0matrix(19, 20) = 0.0;
	A0matrix(19, 21) = 0.0;
	A0matrix(19, 22) = 0.0;
	A0matrix(19, 23) = 0.0;
	A0matrix(19, 24) = 0.0;
	A0matrix(19, 25) = 0.0;
	A0matrix(19, 26) = 0.0;
	A0matrix(19, 27) = 0.0;
	A0matrix(19, 28) = 0.0;
	A0matrix(20, 0) = 0.0;
	A0matrix(20, 1) = 0.0;
	A0matrix(20, 2) = 0.0;
	A0matrix(20, 3) = 0.0;
	A0matrix(20, 4) = 0.243569095885;
	A0matrix(20, 5) = -4.554395958965;
	A0matrix(20, 6) = 0.0;
	A0matrix(20, 7) = 0.0;
	A0matrix(20, 8) = 0.0;
	A0matrix(20, 9) = 0.0;
	A0matrix(20, 10) = 0.0;
	A0matrix(20, 11) = 0.0;
	A0matrix(20, 12) = 0.0;
	A0matrix(20, 13) = 0.0;
	A0matrix(20, 14) = 0.0;
	A0matrix(20, 15) = 0.0;
	A0matrix(20, 16) = 0.0;
	A0matrix(20, 17) = 0.0;
	A0matrix(20, 18) = 0.0;
	A0matrix(20, 19) = 0.0;
	A0matrix(20, 20) = -0.01;
	A0matrix(20, 21) = 0.0;
	A0matrix(20, 22) = 0.0;
	A0matrix(20, 23) = 0.0;
	A0matrix(20, 24) = 0.0;
	A0matrix(20, 25) = 0.0;
	A0matrix(20, 26) = 0.0;
	A0matrix(20, 27) = 0.0;
	A0matrix(20, 28) = 0.0;
	A0matrix(21, 0) = 0.0;
	A0matrix(21, 1) = 0.0;
	A0matrix(21, 2) = 0.0;
	A0matrix(21, 3) = -4.554395958965;
	A0matrix(21, 4) = 0.0;
	A0matrix(21, 5) = 0.0;
	A0matrix(21, 6) = 0.0;
	A0matrix(21, 7) = 0.0;
	A0matrix(21, 8) = 0.0;
	A0matrix(21, 9) = 0.0;
	A0matrix(21, 10) = 0.0;
	A0matrix(21, 11) = 0.0;
	A0matrix(21, 12) = 0.0;
	A0matrix(21, 13) = 0.0;
	A0matrix(21, 14) = 0.0;
	A0matrix(21, 15) = 0.0;
	A0matrix(21, 16) = 0.0;
	A0matrix(21, 17) = 0.0;
	A0matrix(21, 18) = 0.0;
	A0matrix(21, 19) = 0.0;
	A0matrix(21, 20) = 0.0;
	A0matrix(21, 21) = -8.5;
	A0matrix(21, 22) = -18.0;
	A0matrix(21, 23) = 0.0;
	A0matrix(21, 24) = 0.0;
	A0matrix(21, 25) = 0.0;
	A0matrix(21, 26) = 0.0;
	A0matrix(21, 27) = 0.0;
	A0matrix(21, 28) = 0.0;
	A0matrix(22, 0) = 0.0;
	A0matrix(22, 1) = 0.0;
	A0matrix(22, 2) = 0.0;
	A0matrix(22, 3) = 0.0;
	A0matrix(22, 4) = 0.0;
	A0matrix(22, 5) = 0.0;
	A0matrix(22, 6) = 0.0;
	A0matrix(22, 7) = 0.0;
	A0matrix(22, 8) = 0.0;
	A0matrix(22, 9) = 0.0;
	A0matrix(22, 10) = 0.0;
	A0matrix(22, 11) = 0.0;
	A0matrix(22, 12) = 0.0;
	A0matrix(22, 13) = 0.0;
	A0matrix(22, 14) = 0.0;
	A0matrix(22, 15) = 0.0;
	A0matrix(22, 16) = 0.0;
	A0matrix(22, 17) = 0.0;
	A0matrix(22, 18) = 0.0;
	A0matrix(22, 19) = 0.0;
	A0matrix(22, 20) = 0.0;
	A0matrix(22, 21) = 1.0;
	A0matrix(22, 22) = 0.0;
	A0matrix(22, 23) = 0.0;
	A0matrix(22, 24) = 0.0;
	A0matrix(22, 25) = 0.0;
	A0matrix(22, 26) = 0.0;
	A0matrix(22, 27) = 0.0;
	A0matrix(22, 28) = 0.0;
	A0matrix(23, 0) = 0.0;
	A0matrix(23, 1) = 0.0;
	A0matrix(23, 2) = 0.0;
	A0matrix(23, 3) = 0.0;
	A0matrix(23, 4) = -11.385989897412;
	A0matrix(23, 5) = 0.0;
	A0matrix(23, 6) = 0.0;
	A0matrix(23, 7) = 0.0;
	A0matrix(23, 8) = 0.0;
	A0matrix(23, 9) = 0.0;
	A0matrix(23, 10) = 0.0;
	A0matrix(23, 11) = 0.0;
	A0matrix(23, 12) = 0.0;
	A0matrix(23, 13) = 0.0;
	A0matrix(23, 14) = 0.0;
	A0matrix(23, 15) = 0.0;
	A0matrix(23, 16) = 0.0;
	A0matrix(23, 17) = 0.0;
	A0matrix(23, 18) = 0.0;
	A0matrix(23, 19) = 0.0;
	A0matrix(23, 20) = 0.0;
	A0matrix(23, 21) = 0.0;
	A0matrix(23, 22) = 0.0;
	A0matrix(23, 23) = -8.5;
	A0matrix(23, 24) = -18.0;
	A0matrix(23, 25) = 0.0;
	A0matrix(23, 26) = 0.0;
	A0matrix(23, 27) = 0.0;
	A0matrix(23, 28) = 0.0;
	A0matrix(24, 0) = 0.0;
	A0matrix(24, 1) = 0.0;
	A0matrix(24, 2) = 0.0;
	A0matrix(24, 3) = 0.0;
	A0matrix(24, 4) = 0.0;
	A0matrix(24, 5) = 0.0;
	A0matrix(24, 6) = 0.0;
	A0matrix(24, 7) = 0.0;
	A0matrix(24, 8) = 0.0;
	A0matrix(24, 9) = 0.0;
	A0matrix(24, 10) = 0.0;
	A0matrix(24, 11) = 0.0;
	A0matrix(24, 12) = 0.0;
	A0matrix(24, 13) = 0.0;
	A0matrix(24, 14) = 0.0;
	A0matrix(24, 15) = 0.0;
	A0matrix(24, 16) = 0.0;
	A0matrix(24, 17) = 0.0;
	A0matrix(24, 18) = 0.0;
	A0matrix(24, 19) = 0.0;
	A0matrix(24, 20) = 0.0;
	A0matrix(24, 21) = 0.0;
	A0matrix(24, 22) = 0.0;
	A0matrix(24, 23) = 1.0;
	A0matrix(24, 24) = 0.0;
	A0matrix(24, 25) = 0.0;
	A0matrix(24, 26) = 0.0;
	A0matrix(24, 27) = 0.0;
	A0matrix(24, 28) = 0.0;
	A0matrix(25, 0) = 0.0;
	A0matrix(25, 1) = 0.0;
	A0matrix(25, 2) = 0.0;
	A0matrix(25, 3) = 0.0;
	A0matrix(25, 4) = 0.0;
	A0matrix(25, 5) = 0.0;
	A0matrix(25, 6) = 0.0;
	A0matrix(25, 7) = 0.0;
	A0matrix(25, 8) = 0.0;
	A0matrix(25, 9) = 0.68318607598;
	A0matrix(25, 10) = 0.514736886625;
	A0matrix(25, 11) = 0.282998565164;
	A0matrix(25, 12) = 0.440668616363;
	A0matrix(25, 13) = -2.382738811465;
	A0matrix(25, 14) = -0.037424700426;
	A0matrix(25, 15) = -0.035002491999;
	A0matrix(25, 16) = 0.614952694278;
	A0matrix(25, 17) = 14.829958398888;
	A0matrix(25, 18) = -0.110759742503;
	A0matrix(25, 19) = -0.226034186438;
	A0matrix(25, 20) = 4.345468653096;
	A0matrix(25, 21) = 0.001333027828;
	A0matrix(25, 22) = 0.016376955559;
	A0matrix(25, 23) = -0.010465240818;
	A0matrix(25, 24) = -0.0094224826;
	A0matrix(25, 25) = -6.14561518105;
	A0matrix(25, 26) = 0.061014181775;
	A0matrix(25, 27) = 0.141165339638;
	A0matrix(25, 28) = 0.141806743312;
	A0matrix(26, 0) = 0.0;
	A0matrix(26, 1) = 0.0;
	A0matrix(26, 2) = 0.0;
	A0matrix(26, 3) = 0.0;
	A0matrix(26, 4) = 0.0;
	A0matrix(26, 5) = 0.0;
	A0matrix(26, 6) = 0.0;
	A0matrix(26, 7) = 0.0;
	A0matrix(26, 8) = 0.0;
	A0matrix(26, 9) = -36.03935472971;
	A0matrix(26, 10) = 0.767400874818;
	A0matrix(26, 11) = -0.190879388177;
	A0matrix(26, 12) = -11.678174370212;
	A0matrix(26, 13) = -0.041149877278;
	A0matrix(26, 14) = -0.026017271417;
	A0matrix(26, 15) = -0.026698725144;
	A0matrix(26, 16) = 0.036415219598;
	A0matrix(26, 17) = 0.73865635835;
	A0matrix(26, 18) = 6.810845841283;
	A0matrix(26, 19) = -0.38478495798;
	A0matrix(26, 20) = -0.708557300741;
	A0matrix(26, 21) = -0.005524328707;
	A0matrix(26, 22) = 0.002522572903;
	A0matrix(26, 23) = 0.171826920583;
	A0matrix(26, 24) = 0.138368426838;
	A0matrix(26, 25) = 0.071909684799;
	A0matrix(26, 26) = -6.567495145681;
	A0matrix(26, 27) = 0.039293511274;
	A0matrix(26, 28) = 0.006041152866;
	A0matrix(27, 0) = 0.0;
	A0matrix(27, 1) = 0.0;
	A0matrix(27, 2) = 0.0;
	A0matrix(27, 3) = 0.0;
	A0matrix(27, 4) = 0.0;
	A0matrix(27, 5) = 0.0;
	A0matrix(27, 6) = 0.0;
	A0matrix(27, 7) = 0.0;
	A0matrix(27, 8) = 0.0;
	A0matrix(27, 9) = 1.997224587333;
	A0matrix(27, 10) = 13.482210983798;
	A0matrix(27, 11) = 2.488520358003;
	A0matrix(27, 12) = 0.076750797248;
	A0matrix(27, 13) = 0.804972334222;
	A0matrix(27, 14) = 0.023466195202;
	A0matrix(27, 15) = -0.022740687251;
	A0matrix(27, 16) = 0.018646161041;
	A0matrix(27, 17) = 0.436604617107;
	A0matrix(27, 18) = -0.414374632569;
	A0matrix(27, 19) = -6.563020897889;
	A0matrix(27, 20) = -1.423460802051;
	A0matrix(27, 21) = -0.224998971426;
	A0matrix(27, 22) = -0.259852011779;
	A0matrix(27, 23) = -0.008437464875;
	A0matrix(27, 24) = -0.00394534411;
	A0matrix(27, 25) = 0.102235829031;
	A0matrix(27, 26) = 0.191829027845;
	A0matrix(27, 27) = -6.31242884154;
	A0matrix(27, 28) = -0.038075090345;
	A0matrix(28, 0) = 0.0;
	A0matrix(28, 1) = 0.0;
	A0matrix(28, 2) = 0.0;
	A0matrix(28, 3) = 0.0;
	A0matrix(28, 4) = 0.0;
	A0matrix(28, 5) = 0.0;
	A0matrix(28, 6) = 0.0;
	A0matrix(28, 7) = 0.0;
	A0matrix(28, 8) = 0.0;
	A0matrix(28, 9) = 1.761524247668;
	A0matrix(28, 10) = -3.415298165208;
	A0matrix(28, 11) = -1.836225244248;
	A0matrix(28, 12) = -0.015605131825;
	A0matrix(28, 13) = 10.4868455956;
	A0matrix(28, 14) = -0.031379180918;
	A0matrix(28, 15) = 0.00126674641;
	A0matrix(28, 16) = 0.525873993847;
	A0matrix(28, 17) = 9.808565668907;
	A0matrix(28, 18) = -0.367529750255;
	A0matrix(28, 19) = 1.37040552413;
	A0matrix(28, 20) = -12.076970057329;
	A0matrix(28, 21) = 0.004883176776;
	A0matrix(28, 22) = -0.015765473705;
	A0matrix(28, 23) = -3.99777933E-4;
	A0matrix(28, 24) = -4.97333312E-4;
	A0matrix(28, 25) = 0.199818976539;
	A0matrix(28, 26) = -0.002648145523;
	A0matrix(28, 27) = -0.101212258081;
	A0matrix(28, 28) = -5.199268943788;
	system_dynamics0.isEmptyMatrixA = false;
	system_dynamics0.MatrixA = A0matrix;

	col = 6;
	B0matrix.resize(row, col);
	B0matrix(0, 0) = 0.0;
	B0matrix(0, 1) = 0.0;
	B0matrix(0, 2) = 0.0;
	B0matrix(0, 3) = 0.0;
	B0matrix(0, 4) = 0.0;
	B0matrix(0, 5) = 0.0;
	B0matrix(1, 0) = 0.0;
	B0matrix(1, 1) = 0.0;
	B0matrix(1, 2) = 0.0;
	B0matrix(1, 3) = 0.0;
	B0matrix(1, 4) = 0.0;
	B0matrix(1, 5) = 0.0;
	B0matrix(2, 0) = 0.0;
	B0matrix(2, 1) = 0.0;
	B0matrix(2, 2) = 0.0;
	B0matrix(2, 3) = 0.0;
	B0matrix(2, 4) = 0.0;
	B0matrix(2, 5) = 0.0;
	B0matrix(3, 0) = 0.0;
	B0matrix(3, 1) = 0.0;
	B0matrix(3, 2) = 0.0;
	B0matrix(3, 3) = 0.0;
	B0matrix(3, 4) = 0.0;
	B0matrix(3, 5) = 0.0;
	B0matrix(4, 0) = 0.0;
	B0matrix(4, 1) = 0.0;
	B0matrix(4, 2) = 0.0;
	B0matrix(4, 3) = 0.0;
	B0matrix(4, 4) = 0.0;
	B0matrix(4, 5) = 0.0;
	B0matrix(5, 0) = 0.0;
	B0matrix(5, 1) = 0.0;
	B0matrix(5, 2) = 0.0;
	B0matrix(5, 3) = 0.0;
	B0matrix(5, 4) = 0.0;
	B0matrix(5, 5) = 0.0;
	B0matrix(6, 0) = 0.0;
	B0matrix(6, 1) = 0.0;
	B0matrix(6, 2) = 0.0;
	B0matrix(6, 3) = 0.0;
	B0matrix(6, 4) = 0.0;
	B0matrix(6, 5) = 0.0;
	B0matrix(7, 0) = 0.0;
	B0matrix(7, 1) = 0.0;
	B0matrix(7, 2) = 0.0;
	B0matrix(7, 3) = 0.0;
	B0matrix(7, 4) = 0.0;
	B0matrix(7, 5) = 0.0;
	B0matrix(8, 0) = 0.0;
	B0matrix(8, 1) = 0.0;
	B0matrix(8, 2) = 0.0;
	B0matrix(8, 3) = 0.0;
	B0matrix(8, 4) = 0.0;
	B0matrix(8, 5) = 0.0;
	B0matrix(9, 0) = -2.2507624E-5;
	B0matrix(9, 1) = -0.050176870833;
	B0matrix(9, 2) = 0.003161246171;
	B0matrix(9, 3) = -0.003826227932;
	B0matrix(9, 4) = 0.48616517519;
	B0matrix(9, 5) = -0.266739403717;
	B0matrix(10, 0) = 1.0307207E-5;
	B0matrix(10, 1) = 0.01975778857;
	B0matrix(10, 2) = -0.009012833714;
	B0matrix(10, 3) = 0.001602140073;
	B0matrix(10, 4) = -0.311015942657;
	B0matrix(10, 5) = -2.810095522339;
	B0matrix(11, 0) = 1.3852188E-5;
	B0matrix(11, 1) = 0.030385323449;
	B0matrix(11, 2) = -0.003110159427;
	B0matrix(11, 3) = 0.00233173063;
	B0matrix(11, 4) = -0.312812882924;
	B0matrix(11, 5) = -0.287229690327;
	B0matrix(12, 0) = -3.2915E-7;
	B0matrix(12, 1) = -0.002667394037;
	B0matrix(12, 2) = -0.004496152836;
	B0matrix(12, 3) = -1.46052012E-4;
	B0matrix(12, 4) = -0.045956750452;
	B0matrix(12, 5) = -1.76452207127;
	B0matrix(13, 0) = -1.0762331E-5;
	B0matrix(13, 1) = -0.024056576806;
	B0matrix(13, 2) = 0.001361685819;
	B0matrix(13, 3) = -0.001832537128;
	B0matrix(13, 4) = 0.230715295944;
	B0matrix(13, 5) = -0.185649147617;
	B0matrix(14, 0) = 8.62889566E-4;
	B0matrix(14, 1) = 1.753103616578;
	B0matrix(14, 2) = -0.52186960989;
	B0matrix(14, 3) = 0.138741289403;
	B0matrix(14, 4) = -23.319318958026;
	B0matrix(14, 5) = -145.074852087154;
	B0matrix(15, 0) = -7.2556687E-4;
	B0matrix(15, 1) = -1.708539622488;
	B0matrix(15, 2) = -0.111898315003;
	B0matrix(15, 3) = -0.127584976026;
	B0matrix(15, 4) = 13.174473231922;
	B0matrix(15, 5) = -91.469578800748;
	B0matrix(16, 0) = 3.814636E-5;
	B0matrix(16, 1) = 0.069753861204;
	B0matrix(16, 2) = -0.041269247265;
	B0matrix(16, 3) = 0.005772466581;
	B0matrix(16, 4) = -1.243498527057;
	B0matrix(16, 5) = -13.467174945528;
	B0matrix(17, 0) = 0.227719797948;
	B0matrix(17, 1) = 0.0;
	B0matrix(17, 2) = 0.0;
	B0matrix(17, 3) = 0.0;
	B0matrix(17, 4) = 0.0;
	B0matrix(17, 5) = 0.0;
	B0matrix(18, 0) = 0.0;
	B0matrix(18, 1) = 11.385989897412;
	B0matrix(18, 2) = 0.0;
	B0matrix(18, 3) = 0.0;
	B0matrix(18, 4) = 0.0;
	B0matrix(18, 5) = 0.0;
	B0matrix(19, 0) = 0.0;
	B0matrix(19, 1) = 0.0;
	B0matrix(19, 2) = 4.554395958965;
	B0matrix(19, 3) = 0.0;
	B0matrix(19, 4) = 0.0;
	B0matrix(19, 5) = 0.0;
	B0matrix(20, 0) = 0.0;
	B0matrix(20, 1) = 0.0;
	B0matrix(20, 2) = 0.0;
	B0matrix(20, 3) = 4.554395958965;
	B0matrix(20, 4) = 0.0;
	B0matrix(20, 5) = 0.0;
	B0matrix(21, 0) = 0.0;
	B0matrix(21, 1) = 0.0;
	B0matrix(21, 2) = 0.0;
	B0matrix(21, 3) = 0.0;
	B0matrix(21, 4) = 4.554395958965;
	B0matrix(21, 5) = 0.0;
	B0matrix(22, 0) = 0.0;
	B0matrix(22, 1) = 0.0;
	B0matrix(22, 2) = 0.0;
	B0matrix(22, 3) = 0.0;
	B0matrix(22, 4) = 0.0;
	B0matrix(22, 5) = 0.0;
	B0matrix(23, 0) = 0.0;
	B0matrix(23, 1) = 0.0;
	B0matrix(23, 2) = 0.0;
	B0matrix(23, 3) = 0.0;
	B0matrix(23, 4) = 0.0;
	B0matrix(23, 5) = 11.385989897412;
	B0matrix(24, 0) = 0.0;
	B0matrix(24, 1) = 0.0;
	B0matrix(24, 2) = 0.0;
	B0matrix(24, 3) = 0.0;
	B0matrix(24, 4) = 0.0;
	B0matrix(24, 5) = 0.0;
	B0matrix(25, 0) = 0.0;
	B0matrix(25, 1) = 0.0;
	B0matrix(25, 2) = 0.0;
	B0matrix(25, 3) = 0.0;
	B0matrix(25, 4) = 0.0;
	B0matrix(25, 5) = 0.0;
	B0matrix(26, 0) = 0.0;
	B0matrix(26, 1) = 0.0;
	B0matrix(26, 2) = 0.0;
	B0matrix(26, 3) = 0.0;
	B0matrix(26, 4) = 0.0;
	B0matrix(26, 5) = 0.0;
	B0matrix(27, 0) = 0.0;
	B0matrix(27, 1) = 0.0;
	B0matrix(27, 2) = 0.0;
	B0matrix(27, 3) = 0.0;
	B0matrix(27, 4) = 0.0;
	B0matrix(27, 5) = 0.0;
	B0matrix(28, 0) = 0.0;
	B0matrix(28, 1) = 0.0;
	B0matrix(28, 2) = 0.0;
	B0matrix(28, 3) = 0.0;
	B0matrix(28, 4) = 0.0;
	B0matrix(28, 5) = 0.0;
	system_dynamics0.isEmptyMatrixB = false;
	system_dynamics0.MatrixB = B0matrix;

	C0.resize(row);
	C0[0] = 1.0;
	C0[1] = 0.0;
	C0[2] = 0.0;
	C0[3] = 0.0;
	C0[4] = 0.0;
	C0[5] = 0.0;
	C0[6] = 0.0;
	C0[7] = 0.0;
	C0[8] = 0.0;
	C0[9] = 0.0;
	C0[10] = 0.0;
	C0[11] = 0.0;
	C0[12] = 0.0;
	C0[13] = 0.0;
	C0[14] = 0.0;
	C0[15] = 0.0;
	C0[16] = 0.0;
	C0[17] = 0.0;
	C0[18] = 0.0;
	C0[19] = 0.0;
	C0[20] = 0.0;
	C0[21] = 0.0;
	C0[22] = 0.0;
	C0[23] = 0.0;
	C0[24] = 0.0;
	C0[25] = 0.0;
	C0[26] = 0.0;
	C0[27] = 0.0;
	C0[28] = 0.0;
	system_dynamics0.isEmptyC = false;
	system_dynamics0.C = C0;

	invariantBoundSign = 1;

	invariant0 = polytope::ptr(new polytope());

	/*invariant0 = polytope::ptr(
	 new polytope(invariantConstraintsMatrix0, invariantBoundValue0,
	 invariantBoundSign));*/
	invariant0->setIsUniverse(true);

	row = 12;
	col = 6;
	ConstraintsMatrixV0.resize(row, col);
	ConstraintsMatrixV0(0, 0) = -1.0;
	ConstraintsMatrixV0(0, 1) = 0.0;
	ConstraintsMatrixV0(0, 2) = 0.0;
	ConstraintsMatrixV0(0, 3) = 0.0;
	ConstraintsMatrixV0(0, 4) = 0.0;
	ConstraintsMatrixV0(0, 5) = 0.0;
	ConstraintsMatrixV0(1, 0) = 1.0;
	ConstraintsMatrixV0(1, 1) = 0.0;
	ConstraintsMatrixV0(1, 2) = 0.0;
	ConstraintsMatrixV0(1, 3) = 0.0;
	ConstraintsMatrixV0(1, 4) = 0.0;
	ConstraintsMatrixV0(1, 5) = 0.0;
	ConstraintsMatrixV0(2, 0) = 0.0;
	ConstraintsMatrixV0(2, 1) = -1.0;
	ConstraintsMatrixV0(2, 2) = 0.0;
	ConstraintsMatrixV0(2, 3) = 0.0;
	ConstraintsMatrixV0(2, 4) = 0.0;
	ConstraintsMatrixV0(2, 5) = 0.0;
	ConstraintsMatrixV0(3, 0) = 0.0;
	ConstraintsMatrixV0(3, 1) = 1.0;
	ConstraintsMatrixV0(3, 2) = 0.0;
	ConstraintsMatrixV0(3, 3) = 0.0;
	ConstraintsMatrixV0(3, 4) = 0.0;
	ConstraintsMatrixV0(3, 5) = 0.0;
	ConstraintsMatrixV0(4, 0) = 0.0;
	ConstraintsMatrixV0(4, 1) = 0.0;
	ConstraintsMatrixV0(4, 2) = -1.0;
	ConstraintsMatrixV0(4, 3) = 0.0;
	ConstraintsMatrixV0(4, 4) = 0.0;
	ConstraintsMatrixV0(4, 5) = 0.0;
	ConstraintsMatrixV0(5, 0) = 0.0;
	ConstraintsMatrixV0(5, 1) = 0.0;
	ConstraintsMatrixV0(5, 2) = 1.0;
	ConstraintsMatrixV0(5, 3) = 0.0;
	ConstraintsMatrixV0(5, 4) = 0.0;
	ConstraintsMatrixV0(5, 5) = 0.0;
	ConstraintsMatrixV0(6, 0) = 0.0;
	ConstraintsMatrixV0(6, 1) = 0.0;
	ConstraintsMatrixV0(6, 2) = 0.0;
	ConstraintsMatrixV0(6, 3) = -1.0;
	ConstraintsMatrixV0(6, 4) = 0.0;
	ConstraintsMatrixV0(6, 5) = 0.0;
	ConstraintsMatrixV0(7, 0) = 0.0;
	ConstraintsMatrixV0(7, 1) = 0.0;
	ConstraintsMatrixV0(7, 2) = 0.0;
	ConstraintsMatrixV0(7, 3) = 1.0;
	ConstraintsMatrixV0(7, 4) = 0.0;
	ConstraintsMatrixV0(7, 5) = 0.0;
	ConstraintsMatrixV0(8, 0) = 0.0;
	ConstraintsMatrixV0(8, 1) = 0.0;
	ConstraintsMatrixV0(8, 2) = 0.0;
	ConstraintsMatrixV0(8, 3) = 0.0;
	ConstraintsMatrixV0(8, 4) = -1.0;
	ConstraintsMatrixV0(8, 5) = 0.0;
	ConstraintsMatrixV0(9, 0) = 0.0;
	ConstraintsMatrixV0(9, 1) = 0.0;
	ConstraintsMatrixV0(9, 2) = 0.0;
	ConstraintsMatrixV0(9, 3) = 0.0;
	ConstraintsMatrixV0(9, 4) = 1.0;
	ConstraintsMatrixV0(9, 5) = 0.0;
	ConstraintsMatrixV0(10, 0) = 0.0;
	ConstraintsMatrixV0(10, 1) = 0.0;
	ConstraintsMatrixV0(10, 2) = 0.0;
	ConstraintsMatrixV0(10, 3) = 0.0;
	ConstraintsMatrixV0(10, 4) = 0.0;
	ConstraintsMatrixV0(10, 5) = -1.0;
	ConstraintsMatrixV0(11, 0) = 0.0;
	ConstraintsMatrixV0(11, 1) = 0.0;
	ConstraintsMatrixV0(11, 2) = 0.0;
	ConstraintsMatrixV0(11, 3) = 0.0;
	ConstraintsMatrixV0(11, 4) = 0.0;
	ConstraintsMatrixV0(11, 5) = 1.0;

	boundValueV0.resize(row);
	boundValueV0[0] = 0.1;
	boundValueV0[1] = 0.1;
	boundValueV0[2] = 0.1;
	boundValueV0[3] = 0.1;
	boundValueV0[4] = 0.1;
	boundValueV0[5] = 0.1;
	boundValueV0[6] = 0.1;
	boundValueV0[7] = 0.1;
	boundValueV0[8] = 0.1;
	boundValueV0[9] = 0.1;
	boundValueV0[10] = 0.1;
	boundValueV0[11] = 0.1;
	boundSignV = 1;
	system_dynamics0.U = polytope::ptr(
			new polytope(ConstraintsMatrixV0, boundValueV0, boundSignV));

	row = 58;
	col = 29;
	ConstraintsMatrixI.resize(row, col);
	ConstraintsMatrixI(0, 0) = 1;
	ConstraintsMatrixI(0, 1) = 0;
	ConstraintsMatrixI(0, 2) = 0;
	ConstraintsMatrixI(0, 3) = 0;
	ConstraintsMatrixI(0, 4) = 0;
	ConstraintsMatrixI(0, 5) = 0;
	ConstraintsMatrixI(0, 6) = 0;
	ConstraintsMatrixI(0, 7) = 0;
	ConstraintsMatrixI(0, 8) = 0;
	ConstraintsMatrixI(0, 9) = 0;
	ConstraintsMatrixI(0, 10) = 0;
	ConstraintsMatrixI(0, 11) = 0;
	ConstraintsMatrixI(0, 12) = 0;
	ConstraintsMatrixI(0, 13) = 0;
	ConstraintsMatrixI(0, 14) = 0;
	ConstraintsMatrixI(0, 15) = 0;
	ConstraintsMatrixI(0, 16) = 0;
	ConstraintsMatrixI(0, 17) = 0;
	ConstraintsMatrixI(0, 18) = 0;
	ConstraintsMatrixI(0, 19) = 0;
	ConstraintsMatrixI(0, 20) = 0;
	ConstraintsMatrixI(0, 21) = 0;
	ConstraintsMatrixI(0, 22) = 0;
	ConstraintsMatrixI(0, 23) = 0;
	ConstraintsMatrixI(0, 24) = 0;
	ConstraintsMatrixI(0, 25) = 0;
	ConstraintsMatrixI(0, 26) = 0;
	ConstraintsMatrixI(0, 27) = 0;
	ConstraintsMatrixI(0, 28) = 0;
	ConstraintsMatrixI(1, 0) = -1;
	ConstraintsMatrixI(1, 1) = 0;
	ConstraintsMatrixI(1, 2) = 0;
	ConstraintsMatrixI(1, 3) = 0;
	ConstraintsMatrixI(1, 4) = 0;
	ConstraintsMatrixI(1, 5) = 0;
	ConstraintsMatrixI(1, 6) = 0;
	ConstraintsMatrixI(1, 7) = 0;
	ConstraintsMatrixI(1, 8) = 0;
	ConstraintsMatrixI(1, 9) = 0;
	ConstraintsMatrixI(1, 10) = 0;
	ConstraintsMatrixI(1, 11) = 0;
	ConstraintsMatrixI(1, 12) = 0;
	ConstraintsMatrixI(1, 13) = 0;
	ConstraintsMatrixI(1, 14) = 0;
	ConstraintsMatrixI(1, 15) = 0;
	ConstraintsMatrixI(1, 16) = 0;
	ConstraintsMatrixI(1, 17) = 0;
	ConstraintsMatrixI(1, 18) = 0;
	ConstraintsMatrixI(1, 19) = 0;
	ConstraintsMatrixI(1, 20) = 0;
	ConstraintsMatrixI(1, 21) = 0;
	ConstraintsMatrixI(1, 22) = 0;
	ConstraintsMatrixI(1, 23) = 0;
	ConstraintsMatrixI(1, 24) = 0;
	ConstraintsMatrixI(1, 25) = 0;
	ConstraintsMatrixI(1, 26) = 0;
	ConstraintsMatrixI(1, 27) = 0;
	ConstraintsMatrixI(1, 28) = 0;
	ConstraintsMatrixI(2, 0) = 0;
	ConstraintsMatrixI(2, 1) = 1;
	ConstraintsMatrixI(2, 2) = 0;
	ConstraintsMatrixI(2, 3) = 0;
	ConstraintsMatrixI(2, 4) = 0;
	ConstraintsMatrixI(2, 5) = 0;
	ConstraintsMatrixI(2, 6) = 0;
	ConstraintsMatrixI(2, 7) = 0;
	ConstraintsMatrixI(2, 8) = 0;
	ConstraintsMatrixI(2, 9) = 0;
	ConstraintsMatrixI(2, 10) = 0;
	ConstraintsMatrixI(2, 11) = 0;
	ConstraintsMatrixI(2, 12) = 0;
	ConstraintsMatrixI(2, 13) = 0;
	ConstraintsMatrixI(2, 14) = 0;
	ConstraintsMatrixI(2, 15) = 0;
	ConstraintsMatrixI(2, 16) = 0;
	ConstraintsMatrixI(2, 17) = 0;
	ConstraintsMatrixI(2, 18) = 0;
	ConstraintsMatrixI(2, 19) = 0;
	ConstraintsMatrixI(2, 20) = 0;
	ConstraintsMatrixI(2, 21) = 0;
	ConstraintsMatrixI(2, 22) = 0;
	ConstraintsMatrixI(2, 23) = 0;
	ConstraintsMatrixI(2, 24) = 0;
	ConstraintsMatrixI(2, 25) = 0;
	ConstraintsMatrixI(2, 26) = 0;
	ConstraintsMatrixI(2, 27) = 0;
	ConstraintsMatrixI(2, 28) = 0;
	ConstraintsMatrixI(3, 0) = 0;
	ConstraintsMatrixI(3, 1) = -1;
	ConstraintsMatrixI(3, 2) = 0;
	ConstraintsMatrixI(3, 3) = 0;
	ConstraintsMatrixI(3, 4) = 0;
	ConstraintsMatrixI(3, 5) = 0;
	ConstraintsMatrixI(3, 6) = 0;
	ConstraintsMatrixI(3, 7) = 0;
	ConstraintsMatrixI(3, 8) = 0;
	ConstraintsMatrixI(3, 9) = 0;
	ConstraintsMatrixI(3, 10) = 0;
	ConstraintsMatrixI(3, 11) = 0;
	ConstraintsMatrixI(3, 12) = 0;
	ConstraintsMatrixI(3, 13) = 0;
	ConstraintsMatrixI(3, 14) = 0;
	ConstraintsMatrixI(3, 15) = 0;
	ConstraintsMatrixI(3, 16) = 0;
	ConstraintsMatrixI(3, 17) = 0;
	ConstraintsMatrixI(3, 18) = 0;
	ConstraintsMatrixI(3, 19) = 0;
	ConstraintsMatrixI(3, 20) = 0;
	ConstraintsMatrixI(3, 21) = 0;
	ConstraintsMatrixI(3, 22) = 0;
	ConstraintsMatrixI(3, 23) = 0;
	ConstraintsMatrixI(3, 24) = 0;
	ConstraintsMatrixI(3, 25) = 0;
	ConstraintsMatrixI(3, 26) = 0;
	ConstraintsMatrixI(3, 27) = 0;
	ConstraintsMatrixI(3, 28) = 0;
	ConstraintsMatrixI(4, 0) = 0;
	ConstraintsMatrixI(4, 1) = 0;
	ConstraintsMatrixI(4, 2) = 1;
	ConstraintsMatrixI(4, 3) = 0;
	ConstraintsMatrixI(4, 4) = 0;
	ConstraintsMatrixI(4, 5) = 0;
	ConstraintsMatrixI(4, 6) = 0;
	ConstraintsMatrixI(4, 7) = 0;
	ConstraintsMatrixI(4, 8) = 0;
	ConstraintsMatrixI(4, 9) = 0;
	ConstraintsMatrixI(4, 10) = 0;
	ConstraintsMatrixI(4, 11) = 0;
	ConstraintsMatrixI(4, 12) = 0;
	ConstraintsMatrixI(4, 13) = 0;
	ConstraintsMatrixI(4, 14) = 0;
	ConstraintsMatrixI(4, 15) = 0;
	ConstraintsMatrixI(4, 16) = 0;
	ConstraintsMatrixI(4, 17) = 0;
	ConstraintsMatrixI(4, 18) = 0;
	ConstraintsMatrixI(4, 19) = 0;
	ConstraintsMatrixI(4, 20) = 0;
	ConstraintsMatrixI(4, 21) = 0;
	ConstraintsMatrixI(4, 22) = 0;
	ConstraintsMatrixI(4, 23) = 0;
	ConstraintsMatrixI(4, 24) = 0;
	ConstraintsMatrixI(4, 25) = 0;
	ConstraintsMatrixI(4, 26) = 0;
	ConstraintsMatrixI(4, 27) = 0;
	ConstraintsMatrixI(4, 28) = 0;
	ConstraintsMatrixI(5, 0) = 0;
	ConstraintsMatrixI(5, 1) = 0;
	ConstraintsMatrixI(5, 2) = -1;
	ConstraintsMatrixI(5, 3) = 0;
	ConstraintsMatrixI(5, 4) = 0;
	ConstraintsMatrixI(5, 5) = 0;
	ConstraintsMatrixI(5, 6) = 0;
	ConstraintsMatrixI(5, 7) = 0;
	ConstraintsMatrixI(5, 8) = 0;
	ConstraintsMatrixI(5, 9) = 0;
	ConstraintsMatrixI(5, 10) = 0;
	ConstraintsMatrixI(5, 11) = 0;
	ConstraintsMatrixI(5, 12) = 0;
	ConstraintsMatrixI(5, 13) = 0;
	ConstraintsMatrixI(5, 14) = 0;
	ConstraintsMatrixI(5, 15) = 0;
	ConstraintsMatrixI(5, 16) = 0;
	ConstraintsMatrixI(5, 17) = 0;
	ConstraintsMatrixI(5, 18) = 0;
	ConstraintsMatrixI(5, 19) = 0;
	ConstraintsMatrixI(5, 20) = 0;
	ConstraintsMatrixI(5, 21) = 0;
	ConstraintsMatrixI(5, 22) = 0;
	ConstraintsMatrixI(5, 23) = 0;
	ConstraintsMatrixI(5, 24) = 0;
	ConstraintsMatrixI(5, 25) = 0;
	ConstraintsMatrixI(5, 26) = 0;
	ConstraintsMatrixI(5, 27) = 0;
	ConstraintsMatrixI(5, 28) = 0;
	ConstraintsMatrixI(6, 0) = 0;
	ConstraintsMatrixI(6, 1) = 0;
	ConstraintsMatrixI(6, 2) = 0;
	ConstraintsMatrixI(6, 3) = 1;
	ConstraintsMatrixI(6, 4) = 0;
	ConstraintsMatrixI(6, 5) = 0;
	ConstraintsMatrixI(6, 6) = 0;
	ConstraintsMatrixI(6, 7) = 0;
	ConstraintsMatrixI(6, 8) = 0;
	ConstraintsMatrixI(6, 9) = 0;
	ConstraintsMatrixI(6, 10) = 0;
	ConstraintsMatrixI(6, 11) = 0;
	ConstraintsMatrixI(6, 12) = 0;
	ConstraintsMatrixI(6, 13) = 0;
	ConstraintsMatrixI(6, 14) = 0;
	ConstraintsMatrixI(6, 15) = 0;
	ConstraintsMatrixI(6, 16) = 0;
	ConstraintsMatrixI(6, 17) = 0;
	ConstraintsMatrixI(6, 18) = 0;
	ConstraintsMatrixI(6, 19) = 0;
	ConstraintsMatrixI(6, 20) = 0;
	ConstraintsMatrixI(6, 21) = 0;
	ConstraintsMatrixI(6, 22) = 0;
	ConstraintsMatrixI(6, 23) = 0;
	ConstraintsMatrixI(6, 24) = 0;
	ConstraintsMatrixI(6, 25) = 0;
	ConstraintsMatrixI(6, 26) = 0;
	ConstraintsMatrixI(6, 27) = 0;
	ConstraintsMatrixI(6, 28) = 0;
	ConstraintsMatrixI(7, 0) = 0;
	ConstraintsMatrixI(7, 1) = 0;
	ConstraintsMatrixI(7, 2) = 0;
	ConstraintsMatrixI(7, 3) = -1;
	ConstraintsMatrixI(7, 4) = 0;
	ConstraintsMatrixI(7, 5) = 0;
	ConstraintsMatrixI(7, 6) = 0;
	ConstraintsMatrixI(7, 7) = 0;
	ConstraintsMatrixI(7, 8) = 0;
	ConstraintsMatrixI(7, 9) = 0;
	ConstraintsMatrixI(7, 10) = 0;
	ConstraintsMatrixI(7, 11) = 0;
	ConstraintsMatrixI(7, 12) = 0;
	ConstraintsMatrixI(7, 13) = 0;
	ConstraintsMatrixI(7, 14) = 0;
	ConstraintsMatrixI(7, 15) = 0;
	ConstraintsMatrixI(7, 16) = 0;
	ConstraintsMatrixI(7, 17) = 0;
	ConstraintsMatrixI(7, 18) = 0;
	ConstraintsMatrixI(7, 19) = 0;
	ConstraintsMatrixI(7, 20) = 0;
	ConstraintsMatrixI(7, 21) = 0;
	ConstraintsMatrixI(7, 22) = 0;
	ConstraintsMatrixI(7, 23) = 0;
	ConstraintsMatrixI(7, 24) = 0;
	ConstraintsMatrixI(7, 25) = 0;
	ConstraintsMatrixI(7, 26) = 0;
	ConstraintsMatrixI(7, 27) = 0;
	ConstraintsMatrixI(7, 28) = 0;
	ConstraintsMatrixI(8, 0) = 0;
	ConstraintsMatrixI(8, 1) = 0;
	ConstraintsMatrixI(8, 2) = 0;
	ConstraintsMatrixI(8, 3) = 0;
	ConstraintsMatrixI(8, 4) = 1;
	ConstraintsMatrixI(8, 5) = 0;
	ConstraintsMatrixI(8, 6) = 0;
	ConstraintsMatrixI(8, 7) = 0;
	ConstraintsMatrixI(8, 8) = 0;
	ConstraintsMatrixI(8, 9) = 0;
	ConstraintsMatrixI(8, 10) = 0;
	ConstraintsMatrixI(8, 11) = 0;
	ConstraintsMatrixI(8, 12) = 0;
	ConstraintsMatrixI(8, 13) = 0;
	ConstraintsMatrixI(8, 14) = 0;
	ConstraintsMatrixI(8, 15) = 0;
	ConstraintsMatrixI(8, 16) = 0;
	ConstraintsMatrixI(8, 17) = 0;
	ConstraintsMatrixI(8, 18) = 0;
	ConstraintsMatrixI(8, 19) = 0;
	ConstraintsMatrixI(8, 20) = 0;
	ConstraintsMatrixI(8, 21) = 0;
	ConstraintsMatrixI(8, 22) = 0;
	ConstraintsMatrixI(8, 23) = 0;
	ConstraintsMatrixI(8, 24) = 0;
	ConstraintsMatrixI(8, 25) = 0;
	ConstraintsMatrixI(8, 26) = 0;
	ConstraintsMatrixI(8, 27) = 0;
	ConstraintsMatrixI(8, 28) = 0;
	ConstraintsMatrixI(9, 0) = 0;
	ConstraintsMatrixI(9, 1) = 0;
	ConstraintsMatrixI(9, 2) = 0;
	ConstraintsMatrixI(9, 3) = 0;
	ConstraintsMatrixI(9, 4) = -1;
	ConstraintsMatrixI(9, 5) = 0;
	ConstraintsMatrixI(9, 6) = 0;
	ConstraintsMatrixI(9, 7) = 0;
	ConstraintsMatrixI(9, 8) = 0;
	ConstraintsMatrixI(9, 9) = 0;
	ConstraintsMatrixI(9, 10) = 0;
	ConstraintsMatrixI(9, 11) = 0;
	ConstraintsMatrixI(9, 12) = 0;
	ConstraintsMatrixI(9, 13) = 0;
	ConstraintsMatrixI(9, 14) = 0;
	ConstraintsMatrixI(9, 15) = 0;
	ConstraintsMatrixI(9, 16) = 0;
	ConstraintsMatrixI(9, 17) = 0;
	ConstraintsMatrixI(9, 18) = 0;
	ConstraintsMatrixI(9, 19) = 0;
	ConstraintsMatrixI(9, 20) = 0;
	ConstraintsMatrixI(9, 21) = 0;
	ConstraintsMatrixI(9, 22) = 0;
	ConstraintsMatrixI(9, 23) = 0;
	ConstraintsMatrixI(9, 24) = 0;
	ConstraintsMatrixI(9, 25) = 0;
	ConstraintsMatrixI(9, 26) = 0;
	ConstraintsMatrixI(9, 27) = 0;
	ConstraintsMatrixI(9, 28) = 0;
	ConstraintsMatrixI(10, 0) = 0;
	ConstraintsMatrixI(10, 1) = 0;
	ConstraintsMatrixI(10, 2) = 0;
	ConstraintsMatrixI(10, 3) = 0;
	ConstraintsMatrixI(10, 4) = 0;
	ConstraintsMatrixI(10, 5) = 1;
	ConstraintsMatrixI(10, 6) = 0;
	ConstraintsMatrixI(10, 7) = 0;
	ConstraintsMatrixI(10, 8) = 0;
	ConstraintsMatrixI(10, 9) = 0;
	ConstraintsMatrixI(10, 10) = 0;
	ConstraintsMatrixI(10, 11) = 0;
	ConstraintsMatrixI(10, 12) = 0;
	ConstraintsMatrixI(10, 13) = 0;
	ConstraintsMatrixI(10, 14) = 0;
	ConstraintsMatrixI(10, 15) = 0;
	ConstraintsMatrixI(10, 16) = 0;
	ConstraintsMatrixI(10, 17) = 0;
	ConstraintsMatrixI(10, 18) = 0;
	ConstraintsMatrixI(10, 19) = 0;
	ConstraintsMatrixI(10, 20) = 0;
	ConstraintsMatrixI(10, 21) = 0;
	ConstraintsMatrixI(10, 22) = 0;
	ConstraintsMatrixI(10, 23) = 0;
	ConstraintsMatrixI(10, 24) = 0;
	ConstraintsMatrixI(10, 25) = 0;
	ConstraintsMatrixI(10, 26) = 0;
	ConstraintsMatrixI(10, 27) = 0;
	ConstraintsMatrixI(10, 28) = 0;
	ConstraintsMatrixI(11, 0) = 0;
	ConstraintsMatrixI(11, 1) = 0;
	ConstraintsMatrixI(11, 2) = 0;
	ConstraintsMatrixI(11, 3) = 0;
	ConstraintsMatrixI(11, 4) = 0;
	ConstraintsMatrixI(11, 5) = -1;
	ConstraintsMatrixI(11, 6) = 0;
	ConstraintsMatrixI(11, 7) = 0;
	ConstraintsMatrixI(11, 8) = 0;
	ConstraintsMatrixI(11, 9) = 0;
	ConstraintsMatrixI(11, 10) = 0;
	ConstraintsMatrixI(11, 11) = 0;
	ConstraintsMatrixI(11, 12) = 0;
	ConstraintsMatrixI(11, 13) = 0;
	ConstraintsMatrixI(11, 14) = 0;
	ConstraintsMatrixI(11, 15) = 0;
	ConstraintsMatrixI(11, 16) = 0;
	ConstraintsMatrixI(11, 17) = 0;
	ConstraintsMatrixI(11, 18) = 0;
	ConstraintsMatrixI(11, 19) = 0;
	ConstraintsMatrixI(11, 20) = 0;
	ConstraintsMatrixI(11, 21) = 0;
	ConstraintsMatrixI(11, 22) = 0;
	ConstraintsMatrixI(11, 23) = 0;
	ConstraintsMatrixI(11, 24) = 0;
	ConstraintsMatrixI(11, 25) = 0;
	ConstraintsMatrixI(11, 26) = 0;
	ConstraintsMatrixI(11, 27) = 0;
	ConstraintsMatrixI(11, 28) = 0;
	ConstraintsMatrixI(12, 0) = 0;
	ConstraintsMatrixI(12, 1) = 0;
	ConstraintsMatrixI(12, 2) = 0;
	ConstraintsMatrixI(12, 3) = 0;
	ConstraintsMatrixI(12, 4) = 0;
	ConstraintsMatrixI(12, 5) = 0;
	ConstraintsMatrixI(12, 6) = 1;
	ConstraintsMatrixI(12, 7) = 0;
	ConstraintsMatrixI(12, 8) = 0;
	ConstraintsMatrixI(12, 9) = 0;
	ConstraintsMatrixI(12, 10) = 0;
	ConstraintsMatrixI(12, 11) = 0;
	ConstraintsMatrixI(12, 12) = 0;
	ConstraintsMatrixI(12, 13) = 0;
	ConstraintsMatrixI(12, 14) = 0;
	ConstraintsMatrixI(12, 15) = 0;
	ConstraintsMatrixI(12, 16) = 0;
	ConstraintsMatrixI(12, 17) = 0;
	ConstraintsMatrixI(12, 18) = 0;
	ConstraintsMatrixI(12, 19) = 0;
	ConstraintsMatrixI(12, 20) = 0;
	ConstraintsMatrixI(12, 21) = 0;
	ConstraintsMatrixI(12, 22) = 0;
	ConstraintsMatrixI(12, 23) = 0;
	ConstraintsMatrixI(12, 24) = 0;
	ConstraintsMatrixI(12, 25) = 0;
	ConstraintsMatrixI(12, 26) = 0;
	ConstraintsMatrixI(12, 27) = 0;
	ConstraintsMatrixI(12, 28) = 0;
	ConstraintsMatrixI(13, 0) = 0;
	ConstraintsMatrixI(13, 1) = 0;
	ConstraintsMatrixI(13, 2) = 0;
	ConstraintsMatrixI(13, 3) = 0;
	ConstraintsMatrixI(13, 4) = 0;
	ConstraintsMatrixI(13, 5) = 0;
	ConstraintsMatrixI(13, 6) = -1;
	ConstraintsMatrixI(13, 7) = 0;
	ConstraintsMatrixI(13, 8) = 0;
	ConstraintsMatrixI(13, 9) = 0;
	ConstraintsMatrixI(13, 10) = 0;
	ConstraintsMatrixI(13, 11) = 0;
	ConstraintsMatrixI(13, 12) = 0;
	ConstraintsMatrixI(13, 13) = 0;
	ConstraintsMatrixI(13, 14) = 0;
	ConstraintsMatrixI(13, 15) = 0;
	ConstraintsMatrixI(13, 16) = 0;
	ConstraintsMatrixI(13, 17) = 0;
	ConstraintsMatrixI(13, 18) = 0;
	ConstraintsMatrixI(13, 19) = 0;
	ConstraintsMatrixI(13, 20) = 0;
	ConstraintsMatrixI(13, 21) = 0;
	ConstraintsMatrixI(13, 22) = 0;
	ConstraintsMatrixI(13, 23) = 0;
	ConstraintsMatrixI(13, 24) = 0;
	ConstraintsMatrixI(13, 25) = 0;
	ConstraintsMatrixI(13, 26) = 0;
	ConstraintsMatrixI(13, 27) = 0;
	ConstraintsMatrixI(13, 28) = 0;
	ConstraintsMatrixI(14, 0) = 0;
	ConstraintsMatrixI(14, 1) = 0;
	ConstraintsMatrixI(14, 2) = 0;
	ConstraintsMatrixI(14, 3) = 0;
	ConstraintsMatrixI(14, 4) = 0;
	ConstraintsMatrixI(14, 5) = 0;
	ConstraintsMatrixI(14, 6) = 0;
	ConstraintsMatrixI(14, 7) = 1;
	ConstraintsMatrixI(14, 8) = 0;
	ConstraintsMatrixI(14, 9) = 0;
	ConstraintsMatrixI(14, 10) = 0;
	ConstraintsMatrixI(14, 11) = 0;
	ConstraintsMatrixI(14, 12) = 0;
	ConstraintsMatrixI(14, 13) = 0;
	ConstraintsMatrixI(14, 14) = 0;
	ConstraintsMatrixI(14, 15) = 0;
	ConstraintsMatrixI(14, 16) = 0;
	ConstraintsMatrixI(14, 17) = 0;
	ConstraintsMatrixI(14, 18) = 0;
	ConstraintsMatrixI(14, 19) = 0;
	ConstraintsMatrixI(14, 20) = 0;
	ConstraintsMatrixI(14, 21) = 0;
	ConstraintsMatrixI(14, 22) = 0;
	ConstraintsMatrixI(14, 23) = 0;
	ConstraintsMatrixI(14, 24) = 0;
	ConstraintsMatrixI(14, 25) = 0;
	ConstraintsMatrixI(14, 26) = 0;
	ConstraintsMatrixI(14, 27) = 0;
	ConstraintsMatrixI(14, 28) = 0;
	ConstraintsMatrixI(15, 0) = 0;
	ConstraintsMatrixI(15, 1) = 0;
	ConstraintsMatrixI(15, 2) = 0;
	ConstraintsMatrixI(15, 3) = 0;
	ConstraintsMatrixI(15, 4) = 0;
	ConstraintsMatrixI(15, 5) = 0;
	ConstraintsMatrixI(15, 6) = 0;
	ConstraintsMatrixI(15, 7) = -1;
	ConstraintsMatrixI(15, 8) = 0;
	ConstraintsMatrixI(15, 9) = 0;
	ConstraintsMatrixI(15, 10) = 0;
	ConstraintsMatrixI(15, 11) = 0;
	ConstraintsMatrixI(15, 12) = 0;
	ConstraintsMatrixI(15, 13) = 0;
	ConstraintsMatrixI(15, 14) = 0;
	ConstraintsMatrixI(15, 15) = 0;
	ConstraintsMatrixI(15, 16) = 0;
	ConstraintsMatrixI(15, 17) = 0;
	ConstraintsMatrixI(15, 18) = 0;
	ConstraintsMatrixI(15, 19) = 0;
	ConstraintsMatrixI(15, 20) = 0;
	ConstraintsMatrixI(15, 21) = 0;
	ConstraintsMatrixI(15, 22) = 0;
	ConstraintsMatrixI(15, 23) = 0;
	ConstraintsMatrixI(15, 24) = 0;
	ConstraintsMatrixI(15, 25) = 0;
	ConstraintsMatrixI(15, 26) = 0;
	ConstraintsMatrixI(15, 27) = 0;
	ConstraintsMatrixI(15, 28) = 0;
	ConstraintsMatrixI(16, 0) = 0;
	ConstraintsMatrixI(16, 1) = 0;
	ConstraintsMatrixI(16, 2) = 0;
	ConstraintsMatrixI(16, 3) = 0;
	ConstraintsMatrixI(16, 4) = 0;
	ConstraintsMatrixI(16, 5) = 0;
	ConstraintsMatrixI(16, 6) = 0;
	ConstraintsMatrixI(16, 7) = 0;
	ConstraintsMatrixI(16, 8) = 1;
	ConstraintsMatrixI(16, 9) = 0;
	ConstraintsMatrixI(16, 10) = 0;
	ConstraintsMatrixI(16, 11) = 0;
	ConstraintsMatrixI(16, 12) = 0;
	ConstraintsMatrixI(16, 13) = 0;
	ConstraintsMatrixI(16, 14) = 0;
	ConstraintsMatrixI(16, 15) = 0;
	ConstraintsMatrixI(16, 16) = 0;
	ConstraintsMatrixI(16, 17) = 0;
	ConstraintsMatrixI(16, 18) = 0;
	ConstraintsMatrixI(16, 19) = 0;
	ConstraintsMatrixI(16, 20) = 0;
	ConstraintsMatrixI(16, 21) = 0;
	ConstraintsMatrixI(16, 22) = 0;
	ConstraintsMatrixI(16, 23) = 0;
	ConstraintsMatrixI(16, 24) = 0;
	ConstraintsMatrixI(16, 25) = 0;
	ConstraintsMatrixI(16, 26) = 0;
	ConstraintsMatrixI(16, 27) = 0;
	ConstraintsMatrixI(16, 28) = 0;
	ConstraintsMatrixI(17, 0) = 0;
	ConstraintsMatrixI(17, 1) = 0;
	ConstraintsMatrixI(17, 2) = 0;
	ConstraintsMatrixI(17, 3) = 0;
	ConstraintsMatrixI(17, 4) = 0;
	ConstraintsMatrixI(17, 5) = 0;
	ConstraintsMatrixI(17, 6) = 0;
	ConstraintsMatrixI(17, 7) = 0;
	ConstraintsMatrixI(17, 8) = -1;
	ConstraintsMatrixI(17, 9) = 0;
	ConstraintsMatrixI(17, 10) = 0;
	ConstraintsMatrixI(17, 11) = 0;
	ConstraintsMatrixI(17, 12) = 0;
	ConstraintsMatrixI(17, 13) = 0;
	ConstraintsMatrixI(17, 14) = 0;
	ConstraintsMatrixI(17, 15) = 0;
	ConstraintsMatrixI(17, 16) = 0;
	ConstraintsMatrixI(17, 17) = 0;
	ConstraintsMatrixI(17, 18) = 0;
	ConstraintsMatrixI(17, 19) = 0;
	ConstraintsMatrixI(17, 20) = 0;
	ConstraintsMatrixI(17, 21) = 0;
	ConstraintsMatrixI(17, 22) = 0;
	ConstraintsMatrixI(17, 23) = 0;
	ConstraintsMatrixI(17, 24) = 0;
	ConstraintsMatrixI(17, 25) = 0;
	ConstraintsMatrixI(17, 26) = 0;
	ConstraintsMatrixI(17, 27) = 0;
	ConstraintsMatrixI(17, 28) = 0;
	ConstraintsMatrixI(18, 0) = 0;
	ConstraintsMatrixI(18, 1) = 0;
	ConstraintsMatrixI(18, 2) = 0;
	ConstraintsMatrixI(18, 3) = 0;
	ConstraintsMatrixI(18, 4) = 0;
	ConstraintsMatrixI(18, 5) = 0;
	ConstraintsMatrixI(18, 6) = 0;
	ConstraintsMatrixI(18, 7) = 0;
	ConstraintsMatrixI(18, 8) = 0;
	ConstraintsMatrixI(18, 9) = 1;
	ConstraintsMatrixI(18, 10) = 0;
	ConstraintsMatrixI(18, 11) = 0;
	ConstraintsMatrixI(18, 12) = 0;
	ConstraintsMatrixI(18, 13) = 0;
	ConstraintsMatrixI(18, 14) = 0;
	ConstraintsMatrixI(18, 15) = 0;
	ConstraintsMatrixI(18, 16) = 0;
	ConstraintsMatrixI(18, 17) = 0;
	ConstraintsMatrixI(18, 18) = 0;
	ConstraintsMatrixI(18, 19) = 0;
	ConstraintsMatrixI(18, 20) = 0;
	ConstraintsMatrixI(18, 21) = 0;
	ConstraintsMatrixI(18, 22) = 0;
	ConstraintsMatrixI(18, 23) = 0;
	ConstraintsMatrixI(18, 24) = 0;
	ConstraintsMatrixI(18, 25) = 0;
	ConstraintsMatrixI(18, 26) = 0;
	ConstraintsMatrixI(18, 27) = 0;
	ConstraintsMatrixI(18, 28) = 0;
	ConstraintsMatrixI(19, 0) = 0;
	ConstraintsMatrixI(19, 1) = 0;
	ConstraintsMatrixI(19, 2) = 0;
	ConstraintsMatrixI(19, 3) = 0;
	ConstraintsMatrixI(19, 4) = 0;
	ConstraintsMatrixI(19, 5) = 0;
	ConstraintsMatrixI(19, 6) = 0;
	ConstraintsMatrixI(19, 7) = 0;
	ConstraintsMatrixI(19, 8) = 0;
	ConstraintsMatrixI(19, 9) = -1;
	ConstraintsMatrixI(19, 10) = 0;
	ConstraintsMatrixI(19, 11) = 0;
	ConstraintsMatrixI(19, 12) = 0;
	ConstraintsMatrixI(19, 13) = 0;
	ConstraintsMatrixI(19, 14) = 0;
	ConstraintsMatrixI(19, 15) = 0;
	ConstraintsMatrixI(19, 16) = 0;
	ConstraintsMatrixI(19, 17) = 0;
	ConstraintsMatrixI(19, 18) = 0;
	ConstraintsMatrixI(19, 19) = 0;
	ConstraintsMatrixI(19, 20) = 0;
	ConstraintsMatrixI(19, 21) = 0;
	ConstraintsMatrixI(19, 22) = 0;
	ConstraintsMatrixI(19, 23) = 0;
	ConstraintsMatrixI(19, 24) = 0;
	ConstraintsMatrixI(19, 25) = 0;
	ConstraintsMatrixI(19, 26) = 0;
	ConstraintsMatrixI(19, 27) = 0;
	ConstraintsMatrixI(19, 28) = 0;
	ConstraintsMatrixI(20, 0) = 0;
	ConstraintsMatrixI(20, 1) = 0;
	ConstraintsMatrixI(20, 2) = 0;
	ConstraintsMatrixI(20, 3) = 0;
	ConstraintsMatrixI(20, 4) = 0;
	ConstraintsMatrixI(20, 5) = 0;
	ConstraintsMatrixI(20, 6) = 0;
	ConstraintsMatrixI(20, 7) = 0;
	ConstraintsMatrixI(20, 8) = 0;
	ConstraintsMatrixI(20, 9) = 0;
	ConstraintsMatrixI(20, 10) = 1;
	ConstraintsMatrixI(20, 11) = 0;
	ConstraintsMatrixI(20, 12) = 0;
	ConstraintsMatrixI(20, 13) = 0;
	ConstraintsMatrixI(20, 14) = 0;
	ConstraintsMatrixI(20, 15) = 0;
	ConstraintsMatrixI(20, 16) = 0;
	ConstraintsMatrixI(20, 17) = 0;
	ConstraintsMatrixI(20, 18) = 0;
	ConstraintsMatrixI(20, 19) = 0;
	ConstraintsMatrixI(20, 20) = 0;
	ConstraintsMatrixI(20, 21) = 0;
	ConstraintsMatrixI(20, 22) = 0;
	ConstraintsMatrixI(20, 23) = 0;
	ConstraintsMatrixI(20, 24) = 0;
	ConstraintsMatrixI(20, 25) = 0;
	ConstraintsMatrixI(20, 26) = 0;
	ConstraintsMatrixI(20, 27) = 0;
	ConstraintsMatrixI(20, 28) = 0;
	ConstraintsMatrixI(21, 0) = 0;
	ConstraintsMatrixI(21, 1) = 0;
	ConstraintsMatrixI(21, 2) = 0;
	ConstraintsMatrixI(21, 3) = 0;
	ConstraintsMatrixI(21, 4) = 0;
	ConstraintsMatrixI(21, 5) = 0;
	ConstraintsMatrixI(21, 6) = 0;
	ConstraintsMatrixI(21, 7) = 0;
	ConstraintsMatrixI(21, 8) = 0;
	ConstraintsMatrixI(21, 9) = 0;
	ConstraintsMatrixI(21, 10) = -1;
	ConstraintsMatrixI(21, 11) = 0;
	ConstraintsMatrixI(21, 12) = 0;
	ConstraintsMatrixI(21, 13) = 0;
	ConstraintsMatrixI(21, 14) = 0;
	ConstraintsMatrixI(21, 15) = 0;
	ConstraintsMatrixI(21, 16) = 0;
	ConstraintsMatrixI(21, 17) = 0;
	ConstraintsMatrixI(21, 18) = 0;
	ConstraintsMatrixI(21, 19) = 0;
	ConstraintsMatrixI(21, 20) = 0;
	ConstraintsMatrixI(21, 21) = 0;
	ConstraintsMatrixI(21, 22) = 0;
	ConstraintsMatrixI(21, 23) = 0;
	ConstraintsMatrixI(21, 24) = 0;
	ConstraintsMatrixI(21, 25) = 0;
	ConstraintsMatrixI(21, 26) = 0;
	ConstraintsMatrixI(21, 27) = 0;
	ConstraintsMatrixI(21, 28) = 0;
	ConstraintsMatrixI(22, 0) = 0;
	ConstraintsMatrixI(22, 1) = 0;
	ConstraintsMatrixI(22, 2) = 0;
	ConstraintsMatrixI(22, 3) = 0;
	ConstraintsMatrixI(22, 4) = 0;
	ConstraintsMatrixI(22, 5) = 0;
	ConstraintsMatrixI(22, 6) = 0;
	ConstraintsMatrixI(22, 7) = 0;
	ConstraintsMatrixI(22, 8) = 0;
	ConstraintsMatrixI(22, 9) = 0;
	ConstraintsMatrixI(22, 10) = 0;
	ConstraintsMatrixI(22, 11) = 1;
	ConstraintsMatrixI(22, 12) = 0;
	ConstraintsMatrixI(22, 13) = 0;
	ConstraintsMatrixI(22, 14) = 0;
	ConstraintsMatrixI(22, 15) = 0;
	ConstraintsMatrixI(22, 16) = 0;
	ConstraintsMatrixI(22, 17) = 0;
	ConstraintsMatrixI(22, 18) = 0;
	ConstraintsMatrixI(22, 19) = 0;
	ConstraintsMatrixI(22, 20) = 0;
	ConstraintsMatrixI(22, 21) = 0;
	ConstraintsMatrixI(22, 22) = 0;
	ConstraintsMatrixI(22, 23) = 0;
	ConstraintsMatrixI(22, 24) = 0;
	ConstraintsMatrixI(22, 25) = 0;
	ConstraintsMatrixI(22, 26) = 0;
	ConstraintsMatrixI(22, 27) = 0;
	ConstraintsMatrixI(22, 28) = 0;
	ConstraintsMatrixI(23, 0) = 0;
	ConstraintsMatrixI(23, 1) = 0;
	ConstraintsMatrixI(23, 2) = 0;
	ConstraintsMatrixI(23, 3) = 0;
	ConstraintsMatrixI(23, 4) = 0;
	ConstraintsMatrixI(23, 5) = 0;
	ConstraintsMatrixI(23, 6) = 0;
	ConstraintsMatrixI(23, 7) = 0;
	ConstraintsMatrixI(23, 8) = 0;
	ConstraintsMatrixI(23, 9) = 0;
	ConstraintsMatrixI(23, 10) = 0;
	ConstraintsMatrixI(23, 11) = -1;
	ConstraintsMatrixI(23, 12) = 0;
	ConstraintsMatrixI(23, 13) = 0;
	ConstraintsMatrixI(23, 14) = 0;
	ConstraintsMatrixI(23, 15) = 0;
	ConstraintsMatrixI(23, 16) = 0;
	ConstraintsMatrixI(23, 17) = 0;
	ConstraintsMatrixI(23, 18) = 0;
	ConstraintsMatrixI(23, 19) = 0;
	ConstraintsMatrixI(23, 20) = 0;
	ConstraintsMatrixI(23, 21) = 0;
	ConstraintsMatrixI(23, 22) = 0;
	ConstraintsMatrixI(23, 23) = 0;
	ConstraintsMatrixI(23, 24) = 0;
	ConstraintsMatrixI(23, 25) = 0;
	ConstraintsMatrixI(23, 26) = 0;
	ConstraintsMatrixI(23, 27) = 0;
	ConstraintsMatrixI(23, 28) = 0;
	ConstraintsMatrixI(24, 0) = 0;
	ConstraintsMatrixI(24, 1) = 0;
	ConstraintsMatrixI(24, 2) = 0;
	ConstraintsMatrixI(24, 3) = 0;
	ConstraintsMatrixI(24, 4) = 0;
	ConstraintsMatrixI(24, 5) = 0;
	ConstraintsMatrixI(24, 6) = 0;
	ConstraintsMatrixI(24, 7) = 0;
	ConstraintsMatrixI(24, 8) = 0;
	ConstraintsMatrixI(24, 9) = 0;
	ConstraintsMatrixI(24, 10) = 0;
	ConstraintsMatrixI(24, 11) = 0;
	ConstraintsMatrixI(24, 12) = 1;
	ConstraintsMatrixI(24, 13) = 0;
	ConstraintsMatrixI(24, 14) = 0;
	ConstraintsMatrixI(24, 15) = 0;
	ConstraintsMatrixI(24, 16) = 0;
	ConstraintsMatrixI(24, 17) = 0;
	ConstraintsMatrixI(24, 18) = 0;
	ConstraintsMatrixI(24, 19) = 0;
	ConstraintsMatrixI(24, 20) = 0;
	ConstraintsMatrixI(24, 21) = 0;
	ConstraintsMatrixI(24, 22) = 0;
	ConstraintsMatrixI(24, 23) = 0;
	ConstraintsMatrixI(24, 24) = 0;
	ConstraintsMatrixI(24, 25) = 0;
	ConstraintsMatrixI(24, 26) = 0;
	ConstraintsMatrixI(24, 27) = 0;
	ConstraintsMatrixI(24, 28) = 0;
	ConstraintsMatrixI(25, 0) = 0;
	ConstraintsMatrixI(25, 1) = 0;
	ConstraintsMatrixI(25, 2) = 0;
	ConstraintsMatrixI(25, 3) = 0;
	ConstraintsMatrixI(25, 4) = 0;
	ConstraintsMatrixI(25, 5) = 0;
	ConstraintsMatrixI(25, 6) = 0;
	ConstraintsMatrixI(25, 7) = 0;
	ConstraintsMatrixI(25, 8) = 0;
	ConstraintsMatrixI(25, 9) = 0;
	ConstraintsMatrixI(25, 10) = 0;
	ConstraintsMatrixI(25, 11) = 0;
	ConstraintsMatrixI(25, 12) = -1;
	ConstraintsMatrixI(25, 13) = 0;
	ConstraintsMatrixI(25, 14) = 0;
	ConstraintsMatrixI(25, 15) = 0;
	ConstraintsMatrixI(25, 16) = 0;
	ConstraintsMatrixI(25, 17) = 0;
	ConstraintsMatrixI(25, 18) = 0;
	ConstraintsMatrixI(25, 19) = 0;
	ConstraintsMatrixI(25, 20) = 0;
	ConstraintsMatrixI(25, 21) = 0;
	ConstraintsMatrixI(25, 22) = 0;
	ConstraintsMatrixI(25, 23) = 0;
	ConstraintsMatrixI(25, 24) = 0;
	ConstraintsMatrixI(25, 25) = 0;
	ConstraintsMatrixI(25, 26) = 0;
	ConstraintsMatrixI(25, 27) = 0;
	ConstraintsMatrixI(25, 28) = 0;
	ConstraintsMatrixI(26, 0) = 0;
	ConstraintsMatrixI(26, 1) = 0;
	ConstraintsMatrixI(26, 2) = 0;
	ConstraintsMatrixI(26, 3) = 0;
	ConstraintsMatrixI(26, 4) = 0;
	ConstraintsMatrixI(26, 5) = 0;
	ConstraintsMatrixI(26, 6) = 0;
	ConstraintsMatrixI(26, 7) = 0;
	ConstraintsMatrixI(26, 8) = 0;
	ConstraintsMatrixI(26, 9) = 0;
	ConstraintsMatrixI(26, 10) = 0;
	ConstraintsMatrixI(26, 11) = 0;
	ConstraintsMatrixI(26, 12) = 0;
	ConstraintsMatrixI(26, 13) = 1;
	ConstraintsMatrixI(26, 14) = 0;
	ConstraintsMatrixI(26, 15) = 0;
	ConstraintsMatrixI(26, 16) = 0;
	ConstraintsMatrixI(26, 17) = 0;
	ConstraintsMatrixI(26, 18) = 0;
	ConstraintsMatrixI(26, 19) = 0;
	ConstraintsMatrixI(26, 20) = 0;
	ConstraintsMatrixI(26, 21) = 0;
	ConstraintsMatrixI(26, 22) = 0;
	ConstraintsMatrixI(26, 23) = 0;
	ConstraintsMatrixI(26, 24) = 0;
	ConstraintsMatrixI(26, 25) = 0;
	ConstraintsMatrixI(26, 26) = 0;
	ConstraintsMatrixI(26, 27) = 0;
	ConstraintsMatrixI(26, 28) = 0;
	ConstraintsMatrixI(27, 0) = 0;
	ConstraintsMatrixI(27, 1) = 0;
	ConstraintsMatrixI(27, 2) = 0;
	ConstraintsMatrixI(27, 3) = 0;
	ConstraintsMatrixI(27, 4) = 0;
	ConstraintsMatrixI(27, 5) = 0;
	ConstraintsMatrixI(27, 6) = 0;
	ConstraintsMatrixI(27, 7) = 0;
	ConstraintsMatrixI(27, 8) = 0;
	ConstraintsMatrixI(27, 9) = 0;
	ConstraintsMatrixI(27, 10) = 0;
	ConstraintsMatrixI(27, 11) = 0;
	ConstraintsMatrixI(27, 12) = 0;
	ConstraintsMatrixI(27, 13) = -1;
	ConstraintsMatrixI(27, 14) = 0;
	ConstraintsMatrixI(27, 15) = 0;
	ConstraintsMatrixI(27, 16) = 0;
	ConstraintsMatrixI(27, 17) = 0;
	ConstraintsMatrixI(27, 18) = 0;
	ConstraintsMatrixI(27, 19) = 0;
	ConstraintsMatrixI(27, 20) = 0;
	ConstraintsMatrixI(27, 21) = 0;
	ConstraintsMatrixI(27, 22) = 0;
	ConstraintsMatrixI(27, 23) = 0;
	ConstraintsMatrixI(27, 24) = 0;
	ConstraintsMatrixI(27, 25) = 0;
	ConstraintsMatrixI(27, 26) = 0;
	ConstraintsMatrixI(27, 27) = 0;
	ConstraintsMatrixI(27, 28) = 0;
	ConstraintsMatrixI(28, 0) = 0;
	ConstraintsMatrixI(28, 1) = 0;
	ConstraintsMatrixI(28, 2) = 0;
	ConstraintsMatrixI(28, 3) = 0;
	ConstraintsMatrixI(28, 4) = 0;
	ConstraintsMatrixI(28, 5) = 0;
	ConstraintsMatrixI(28, 6) = 0;
	ConstraintsMatrixI(28, 7) = 0;
	ConstraintsMatrixI(28, 8) = 0;
	ConstraintsMatrixI(28, 9) = 0;
	ConstraintsMatrixI(28, 10) = 0;
	ConstraintsMatrixI(28, 11) = 0;
	ConstraintsMatrixI(28, 12) = 0;
	ConstraintsMatrixI(28, 13) = 0;
	ConstraintsMatrixI(28, 14) = 1;
	ConstraintsMatrixI(28, 15) = 0;
	ConstraintsMatrixI(28, 16) = 0;
	ConstraintsMatrixI(28, 17) = 0;
	ConstraintsMatrixI(28, 18) = 0;
	ConstraintsMatrixI(28, 19) = 0;
	ConstraintsMatrixI(28, 20) = 0;
	ConstraintsMatrixI(28, 21) = 0;
	ConstraintsMatrixI(28, 22) = 0;
	ConstraintsMatrixI(28, 23) = 0;
	ConstraintsMatrixI(28, 24) = 0;
	ConstraintsMatrixI(28, 25) = 0;
	ConstraintsMatrixI(28, 26) = 0;
	ConstraintsMatrixI(28, 27) = 0;
	ConstraintsMatrixI(28, 28) = 0;
	ConstraintsMatrixI(29, 0) = 0;
	ConstraintsMatrixI(29, 1) = 0;
	ConstraintsMatrixI(29, 2) = 0;
	ConstraintsMatrixI(29, 3) = 0;
	ConstraintsMatrixI(29, 4) = 0;
	ConstraintsMatrixI(29, 5) = 0;
	ConstraintsMatrixI(29, 6) = 0;
	ConstraintsMatrixI(29, 7) = 0;
	ConstraintsMatrixI(29, 8) = 0;
	ConstraintsMatrixI(29, 9) = 0;
	ConstraintsMatrixI(29, 10) = 0;
	ConstraintsMatrixI(29, 11) = 0;
	ConstraintsMatrixI(29, 12) = 0;
	ConstraintsMatrixI(29, 13) = 0;
	ConstraintsMatrixI(29, 14) = -1;
	ConstraintsMatrixI(29, 15) = 0;
	ConstraintsMatrixI(29, 16) = 0;
	ConstraintsMatrixI(29, 17) = 0;
	ConstraintsMatrixI(29, 18) = 0;
	ConstraintsMatrixI(29, 19) = 0;
	ConstraintsMatrixI(29, 20) = 0;
	ConstraintsMatrixI(29, 21) = 0;
	ConstraintsMatrixI(29, 22) = 0;
	ConstraintsMatrixI(29, 23) = 0;
	ConstraintsMatrixI(29, 24) = 0;
	ConstraintsMatrixI(29, 25) = 0;
	ConstraintsMatrixI(29, 26) = 0;
	ConstraintsMatrixI(29, 27) = 0;
	ConstraintsMatrixI(29, 28) = 0;
	ConstraintsMatrixI(30, 0) = 0;
	ConstraintsMatrixI(30, 1) = 0;
	ConstraintsMatrixI(30, 2) = 0;
	ConstraintsMatrixI(30, 3) = 0;
	ConstraintsMatrixI(30, 4) = 0;
	ConstraintsMatrixI(30, 5) = 0;
	ConstraintsMatrixI(30, 6) = 0;
	ConstraintsMatrixI(30, 7) = 0;
	ConstraintsMatrixI(30, 8) = 0;
	ConstraintsMatrixI(30, 9) = 0;
	ConstraintsMatrixI(30, 10) = 0;
	ConstraintsMatrixI(30, 11) = 0;
	ConstraintsMatrixI(30, 12) = 0;
	ConstraintsMatrixI(30, 13) = 0;
	ConstraintsMatrixI(30, 14) = 0;
	ConstraintsMatrixI(30, 15) = 1;
	ConstraintsMatrixI(30, 16) = 0;
	ConstraintsMatrixI(30, 17) = 0;
	ConstraintsMatrixI(30, 18) = 0;
	ConstraintsMatrixI(30, 19) = 0;
	ConstraintsMatrixI(30, 20) = 0;
	ConstraintsMatrixI(30, 21) = 0;
	ConstraintsMatrixI(30, 22) = 0;
	ConstraintsMatrixI(30, 23) = 0;
	ConstraintsMatrixI(30, 24) = 0;
	ConstraintsMatrixI(30, 25) = 0;
	ConstraintsMatrixI(30, 26) = 0;
	ConstraintsMatrixI(30, 27) = 0;
	ConstraintsMatrixI(30, 28) = 0;
	ConstraintsMatrixI(31, 0) = 0;
	ConstraintsMatrixI(31, 1) = 0;
	ConstraintsMatrixI(31, 2) = 0;
	ConstraintsMatrixI(31, 3) = 0;
	ConstraintsMatrixI(31, 4) = 0;
	ConstraintsMatrixI(31, 5) = 0;
	ConstraintsMatrixI(31, 6) = 0;
	ConstraintsMatrixI(31, 7) = 0;
	ConstraintsMatrixI(31, 8) = 0;
	ConstraintsMatrixI(31, 9) = 0;
	ConstraintsMatrixI(31, 10) = 0;
	ConstraintsMatrixI(31, 11) = 0;
	ConstraintsMatrixI(31, 12) = 0;
	ConstraintsMatrixI(31, 13) = 0;
	ConstraintsMatrixI(31, 14) = 0;
	ConstraintsMatrixI(31, 15) = -1;
	ConstraintsMatrixI(31, 16) = 0;
	ConstraintsMatrixI(31, 17) = 0;
	ConstraintsMatrixI(31, 18) = 0;
	ConstraintsMatrixI(31, 19) = 0;
	ConstraintsMatrixI(31, 20) = 0;
	ConstraintsMatrixI(31, 21) = 0;
	ConstraintsMatrixI(31, 22) = 0;
	ConstraintsMatrixI(31, 23) = 0;
	ConstraintsMatrixI(31, 24) = 0;
	ConstraintsMatrixI(31, 25) = 0;
	ConstraintsMatrixI(31, 26) = 0;
	ConstraintsMatrixI(31, 27) = 0;
	ConstraintsMatrixI(31, 28) = 0;
	ConstraintsMatrixI(32, 0) = 0;
	ConstraintsMatrixI(32, 1) = 0;
	ConstraintsMatrixI(32, 2) = 0;
	ConstraintsMatrixI(32, 3) = 0;
	ConstraintsMatrixI(32, 4) = 0;
	ConstraintsMatrixI(32, 5) = 0;
	ConstraintsMatrixI(32, 6) = 0;
	ConstraintsMatrixI(32, 7) = 0;
	ConstraintsMatrixI(32, 8) = 0;
	ConstraintsMatrixI(32, 9) = 0;
	ConstraintsMatrixI(32, 10) = 0;
	ConstraintsMatrixI(32, 11) = 0;
	ConstraintsMatrixI(32, 12) = 0;
	ConstraintsMatrixI(32, 13) = 0;
	ConstraintsMatrixI(32, 14) = 0;
	ConstraintsMatrixI(32, 15) = 0;
	ConstraintsMatrixI(32, 16) = 1;
	ConstraintsMatrixI(32, 17) = 0;
	ConstraintsMatrixI(32, 18) = 0;
	ConstraintsMatrixI(32, 19) = 0;
	ConstraintsMatrixI(32, 20) = 0;
	ConstraintsMatrixI(32, 21) = 0;
	ConstraintsMatrixI(32, 22) = 0;
	ConstraintsMatrixI(32, 23) = 0;
	ConstraintsMatrixI(32, 24) = 0;
	ConstraintsMatrixI(32, 25) = 0;
	ConstraintsMatrixI(32, 26) = 0;
	ConstraintsMatrixI(32, 27) = 0;
	ConstraintsMatrixI(32, 28) = 0;
	ConstraintsMatrixI(33, 0) = 0;
	ConstraintsMatrixI(33, 1) = 0;
	ConstraintsMatrixI(33, 2) = 0;
	ConstraintsMatrixI(33, 3) = 0;
	ConstraintsMatrixI(33, 4) = 0;
	ConstraintsMatrixI(33, 5) = 0;
	ConstraintsMatrixI(33, 6) = 0;
	ConstraintsMatrixI(33, 7) = 0;
	ConstraintsMatrixI(33, 8) = 0;
	ConstraintsMatrixI(33, 9) = 0;
	ConstraintsMatrixI(33, 10) = 0;
	ConstraintsMatrixI(33, 11) = 0;
	ConstraintsMatrixI(33, 12) = 0;
	ConstraintsMatrixI(33, 13) = 0;
	ConstraintsMatrixI(33, 14) = 0;
	ConstraintsMatrixI(33, 15) = 0;
	ConstraintsMatrixI(33, 16) = -1;
	ConstraintsMatrixI(33, 17) = 0;
	ConstraintsMatrixI(33, 18) = 0;
	ConstraintsMatrixI(33, 19) = 0;
	ConstraintsMatrixI(33, 20) = 0;
	ConstraintsMatrixI(33, 21) = 0;
	ConstraintsMatrixI(33, 22) = 0;
	ConstraintsMatrixI(33, 23) = 0;
	ConstraintsMatrixI(33, 24) = 0;
	ConstraintsMatrixI(33, 25) = 0;
	ConstraintsMatrixI(33, 26) = 0;
	ConstraintsMatrixI(33, 27) = 0;
	ConstraintsMatrixI(33, 28) = 0;
	ConstraintsMatrixI(34, 0) = 0;
	ConstraintsMatrixI(34, 1) = 0;
	ConstraintsMatrixI(34, 2) = 0;
	ConstraintsMatrixI(34, 3) = 0;
	ConstraintsMatrixI(34, 4) = 0;
	ConstraintsMatrixI(34, 5) = 0;
	ConstraintsMatrixI(34, 6) = 0;
	ConstraintsMatrixI(34, 7) = 0;
	ConstraintsMatrixI(34, 8) = 0;
	ConstraintsMatrixI(34, 9) = 0;
	ConstraintsMatrixI(34, 10) = 0;
	ConstraintsMatrixI(34, 11) = 0;
	ConstraintsMatrixI(34, 12) = 0;
	ConstraintsMatrixI(34, 13) = 0;
	ConstraintsMatrixI(34, 14) = 0;
	ConstraintsMatrixI(34, 15) = 0;
	ConstraintsMatrixI(34, 16) = 0;
	ConstraintsMatrixI(34, 17) = 1;
	ConstraintsMatrixI(34, 18) = 0;
	ConstraintsMatrixI(34, 19) = 0;
	ConstraintsMatrixI(34, 20) = 0;
	ConstraintsMatrixI(34, 21) = 0;
	ConstraintsMatrixI(34, 22) = 0;
	ConstraintsMatrixI(34, 23) = 0;
	ConstraintsMatrixI(34, 24) = 0;
	ConstraintsMatrixI(34, 25) = 0;
	ConstraintsMatrixI(34, 26) = 0;
	ConstraintsMatrixI(34, 27) = 0;
	ConstraintsMatrixI(34, 28) = 0;
	ConstraintsMatrixI(35, 0) = 0;
	ConstraintsMatrixI(35, 1) = 0;
	ConstraintsMatrixI(35, 2) = 0;
	ConstraintsMatrixI(35, 3) = 0;
	ConstraintsMatrixI(35, 4) = 0;
	ConstraintsMatrixI(35, 5) = 0;
	ConstraintsMatrixI(35, 6) = 0;
	ConstraintsMatrixI(35, 7) = 0;
	ConstraintsMatrixI(35, 8) = 0;
	ConstraintsMatrixI(35, 9) = 0;
	ConstraintsMatrixI(35, 10) = 0;
	ConstraintsMatrixI(35, 11) = 0;
	ConstraintsMatrixI(35, 12) = 0;
	ConstraintsMatrixI(35, 13) = 0;
	ConstraintsMatrixI(35, 14) = 0;
	ConstraintsMatrixI(35, 15) = 0;
	ConstraintsMatrixI(35, 16) = 0;
	ConstraintsMatrixI(35, 17) = -1;
	ConstraintsMatrixI(35, 18) = 0;
	ConstraintsMatrixI(35, 19) = 0;
	ConstraintsMatrixI(35, 20) = 0;
	ConstraintsMatrixI(35, 21) = 0;
	ConstraintsMatrixI(35, 22) = 0;
	ConstraintsMatrixI(35, 23) = 0;
	ConstraintsMatrixI(35, 24) = 0;
	ConstraintsMatrixI(35, 25) = 0;
	ConstraintsMatrixI(35, 26) = 0;
	ConstraintsMatrixI(35, 27) = 0;
	ConstraintsMatrixI(35, 28) = 0;
	ConstraintsMatrixI(36, 0) = 0;
	ConstraintsMatrixI(36, 1) = 0;
	ConstraintsMatrixI(36, 2) = 0;
	ConstraintsMatrixI(36, 3) = 0;
	ConstraintsMatrixI(36, 4) = 0;
	ConstraintsMatrixI(36, 5) = 0;
	ConstraintsMatrixI(36, 6) = 0;
	ConstraintsMatrixI(36, 7) = 0;
	ConstraintsMatrixI(36, 8) = 0;
	ConstraintsMatrixI(36, 9) = 0;
	ConstraintsMatrixI(36, 10) = 0;
	ConstraintsMatrixI(36, 11) = 0;
	ConstraintsMatrixI(36, 12) = 0;
	ConstraintsMatrixI(36, 13) = 0;
	ConstraintsMatrixI(36, 14) = 0;
	ConstraintsMatrixI(36, 15) = 0;
	ConstraintsMatrixI(36, 16) = 0;
	ConstraintsMatrixI(36, 17) = 0;
	ConstraintsMatrixI(36, 18) = 1;
	ConstraintsMatrixI(36, 19) = 0;
	ConstraintsMatrixI(36, 20) = 0;
	ConstraintsMatrixI(36, 21) = 0;
	ConstraintsMatrixI(36, 22) = 0;
	ConstraintsMatrixI(36, 23) = 0;
	ConstraintsMatrixI(36, 24) = 0;
	ConstraintsMatrixI(36, 25) = 0;
	ConstraintsMatrixI(36, 26) = 0;
	ConstraintsMatrixI(36, 27) = 0;
	ConstraintsMatrixI(36, 28) = 0;
	ConstraintsMatrixI(37, 0) = 0;
	ConstraintsMatrixI(37, 1) = 0;
	ConstraintsMatrixI(37, 2) = 0;
	ConstraintsMatrixI(37, 3) = 0;
	ConstraintsMatrixI(37, 4) = 0;
	ConstraintsMatrixI(37, 5) = 0;
	ConstraintsMatrixI(37, 6) = 0;
	ConstraintsMatrixI(37, 7) = 0;
	ConstraintsMatrixI(37, 8) = 0;
	ConstraintsMatrixI(37, 9) = 0;
	ConstraintsMatrixI(37, 10) = 0;
	ConstraintsMatrixI(37, 11) = 0;
	ConstraintsMatrixI(37, 12) = 0;
	ConstraintsMatrixI(37, 13) = 0;
	ConstraintsMatrixI(37, 14) = 0;
	ConstraintsMatrixI(37, 15) = 0;
	ConstraintsMatrixI(37, 16) = 0;
	ConstraintsMatrixI(37, 17) = 0;
	ConstraintsMatrixI(37, 18) = -1;
	ConstraintsMatrixI(37, 19) = 0;
	ConstraintsMatrixI(37, 20) = 0;
	ConstraintsMatrixI(37, 21) = 0;
	ConstraintsMatrixI(37, 22) = 0;
	ConstraintsMatrixI(37, 23) = 0;
	ConstraintsMatrixI(37, 24) = 0;
	ConstraintsMatrixI(37, 25) = 0;
	ConstraintsMatrixI(37, 26) = 0;
	ConstraintsMatrixI(37, 27) = 0;
	ConstraintsMatrixI(37, 28) = 0;
	ConstraintsMatrixI(38, 0) = 0;
	ConstraintsMatrixI(38, 1) = 0;
	ConstraintsMatrixI(38, 2) = 0;
	ConstraintsMatrixI(38, 3) = 0;
	ConstraintsMatrixI(38, 4) = 0;
	ConstraintsMatrixI(38, 5) = 0;
	ConstraintsMatrixI(38, 6) = 0;
	ConstraintsMatrixI(38, 7) = 0;
	ConstraintsMatrixI(38, 8) = 0;
	ConstraintsMatrixI(38, 9) = 0;
	ConstraintsMatrixI(38, 10) = 0;
	ConstraintsMatrixI(38, 11) = 0;
	ConstraintsMatrixI(38, 12) = 0;
	ConstraintsMatrixI(38, 13) = 0;
	ConstraintsMatrixI(38, 14) = 0;
	ConstraintsMatrixI(38, 15) = 0;
	ConstraintsMatrixI(38, 16) = 0;
	ConstraintsMatrixI(38, 17) = 0;
	ConstraintsMatrixI(38, 18) = 0;
	ConstraintsMatrixI(38, 19) = 1;
	ConstraintsMatrixI(38, 20) = 0;
	ConstraintsMatrixI(38, 21) = 0;
	ConstraintsMatrixI(38, 22) = 0;
	ConstraintsMatrixI(38, 23) = 0;
	ConstraintsMatrixI(38, 24) = 0;
	ConstraintsMatrixI(38, 25) = 0;
	ConstraintsMatrixI(38, 26) = 0;
	ConstraintsMatrixI(38, 27) = 0;
	ConstraintsMatrixI(38, 28) = 0;
	ConstraintsMatrixI(39, 0) = 0;
	ConstraintsMatrixI(39, 1) = 0;
	ConstraintsMatrixI(39, 2) = 0;
	ConstraintsMatrixI(39, 3) = 0;
	ConstraintsMatrixI(39, 4) = 0;
	ConstraintsMatrixI(39, 5) = 0;
	ConstraintsMatrixI(39, 6) = 0;
	ConstraintsMatrixI(39, 7) = 0;
	ConstraintsMatrixI(39, 8) = 0;
	ConstraintsMatrixI(39, 9) = 0;
	ConstraintsMatrixI(39, 10) = 0;
	ConstraintsMatrixI(39, 11) = 0;
	ConstraintsMatrixI(39, 12) = 0;
	ConstraintsMatrixI(39, 13) = 0;
	ConstraintsMatrixI(39, 14) = 0;
	ConstraintsMatrixI(39, 15) = 0;
	ConstraintsMatrixI(39, 16) = 0;
	ConstraintsMatrixI(39, 17) = 0;
	ConstraintsMatrixI(39, 18) = 0;
	ConstraintsMatrixI(39, 19) = -1;
	ConstraintsMatrixI(39, 20) = 0;
	ConstraintsMatrixI(39, 21) = 0;
	ConstraintsMatrixI(39, 22) = 0;
	ConstraintsMatrixI(39, 23) = 0;
	ConstraintsMatrixI(39, 24) = 0;
	ConstraintsMatrixI(39, 25) = 0;
	ConstraintsMatrixI(39, 26) = 0;
	ConstraintsMatrixI(39, 27) = 0;
	ConstraintsMatrixI(39, 28) = 0;
	ConstraintsMatrixI(40, 0) = 0;
	ConstraintsMatrixI(40, 1) = 0;
	ConstraintsMatrixI(40, 2) = 0;
	ConstraintsMatrixI(40, 3) = 0;
	ConstraintsMatrixI(40, 4) = 0;
	ConstraintsMatrixI(40, 5) = 0;
	ConstraintsMatrixI(40, 6) = 0;
	ConstraintsMatrixI(40, 7) = 0;
	ConstraintsMatrixI(40, 8) = 0;
	ConstraintsMatrixI(40, 9) = 0;
	ConstraintsMatrixI(40, 10) = 0;
	ConstraintsMatrixI(40, 11) = 0;
	ConstraintsMatrixI(40, 12) = 0;
	ConstraintsMatrixI(40, 13) = 0;
	ConstraintsMatrixI(40, 14) = 0;
	ConstraintsMatrixI(40, 15) = 0;
	ConstraintsMatrixI(40, 16) = 0;
	ConstraintsMatrixI(40, 17) = 0;
	ConstraintsMatrixI(40, 18) = 0;
	ConstraintsMatrixI(40, 19) = 0;
	ConstraintsMatrixI(40, 20) = 1;
	ConstraintsMatrixI(40, 21) = 0;
	ConstraintsMatrixI(40, 22) = 0;
	ConstraintsMatrixI(40, 23) = 0;
	ConstraintsMatrixI(40, 24) = 0;
	ConstraintsMatrixI(40, 25) = 0;
	ConstraintsMatrixI(40, 26) = 0;
	ConstraintsMatrixI(40, 27) = 0;
	ConstraintsMatrixI(40, 28) = 0;
	ConstraintsMatrixI(41, 0) = 0;
	ConstraintsMatrixI(41, 1) = 0;
	ConstraintsMatrixI(41, 2) = 0;
	ConstraintsMatrixI(41, 3) = 0;
	ConstraintsMatrixI(41, 4) = 0;
	ConstraintsMatrixI(41, 5) = 0;
	ConstraintsMatrixI(41, 6) = 0;
	ConstraintsMatrixI(41, 7) = 0;
	ConstraintsMatrixI(41, 8) = 0;
	ConstraintsMatrixI(41, 9) = 0;
	ConstraintsMatrixI(41, 10) = 0;
	ConstraintsMatrixI(41, 11) = 0;
	ConstraintsMatrixI(41, 12) = 0;
	ConstraintsMatrixI(41, 13) = 0;
	ConstraintsMatrixI(41, 14) = 0;
	ConstraintsMatrixI(41, 15) = 0;
	ConstraintsMatrixI(41, 16) = 0;
	ConstraintsMatrixI(41, 17) = 0;
	ConstraintsMatrixI(41, 18) = 0;
	ConstraintsMatrixI(41, 19) = 0;
	ConstraintsMatrixI(41, 20) = -1;
	ConstraintsMatrixI(41, 21) = 0;
	ConstraintsMatrixI(41, 22) = 0;
	ConstraintsMatrixI(41, 23) = 0;
	ConstraintsMatrixI(41, 24) = 0;
	ConstraintsMatrixI(41, 25) = 0;
	ConstraintsMatrixI(41, 26) = 0;
	ConstraintsMatrixI(41, 27) = 0;
	ConstraintsMatrixI(41, 28) = 0;
	ConstraintsMatrixI(42, 0) = 0;
	ConstraintsMatrixI(42, 1) = 0;
	ConstraintsMatrixI(42, 2) = 0;
	ConstraintsMatrixI(42, 3) = 0;
	ConstraintsMatrixI(42, 4) = 0;
	ConstraintsMatrixI(42, 5) = 0;
	ConstraintsMatrixI(42, 6) = 0;
	ConstraintsMatrixI(42, 7) = 0;
	ConstraintsMatrixI(42, 8) = 0;
	ConstraintsMatrixI(42, 9) = 0;
	ConstraintsMatrixI(42, 10) = 0;
	ConstraintsMatrixI(42, 11) = 0;
	ConstraintsMatrixI(42, 12) = 0;
	ConstraintsMatrixI(42, 13) = 0;
	ConstraintsMatrixI(42, 14) = 0;
	ConstraintsMatrixI(42, 15) = 0;
	ConstraintsMatrixI(42, 16) = 0;
	ConstraintsMatrixI(42, 17) = 0;
	ConstraintsMatrixI(42, 18) = 0;
	ConstraintsMatrixI(42, 19) = 0;
	ConstraintsMatrixI(42, 20) = 0;
	ConstraintsMatrixI(42, 21) = 1;
	ConstraintsMatrixI(42, 22) = 0;
	ConstraintsMatrixI(42, 23) = 0;
	ConstraintsMatrixI(42, 24) = 0;
	ConstraintsMatrixI(42, 25) = 0;
	ConstraintsMatrixI(42, 26) = 0;
	ConstraintsMatrixI(42, 27) = 0;
	ConstraintsMatrixI(42, 28) = 0;
	ConstraintsMatrixI(43, 0) = 0;
	ConstraintsMatrixI(43, 1) = 0;
	ConstraintsMatrixI(43, 2) = 0;
	ConstraintsMatrixI(43, 3) = 0;
	ConstraintsMatrixI(43, 4) = 0;
	ConstraintsMatrixI(43, 5) = 0;
	ConstraintsMatrixI(43, 6) = 0;
	ConstraintsMatrixI(43, 7) = 0;
	ConstraintsMatrixI(43, 8) = 0;
	ConstraintsMatrixI(43, 9) = 0;
	ConstraintsMatrixI(43, 10) = 0;
	ConstraintsMatrixI(43, 11) = 0;
	ConstraintsMatrixI(43, 12) = 0;
	ConstraintsMatrixI(43, 13) = 0;
	ConstraintsMatrixI(43, 14) = 0;
	ConstraintsMatrixI(43, 15) = 0;
	ConstraintsMatrixI(43, 16) = 0;
	ConstraintsMatrixI(43, 17) = 0;
	ConstraintsMatrixI(43, 18) = 0;
	ConstraintsMatrixI(43, 19) = 0;
	ConstraintsMatrixI(43, 20) = 0;
	ConstraintsMatrixI(43, 21) = -1;
	ConstraintsMatrixI(43, 22) = 0;
	ConstraintsMatrixI(43, 23) = 0;
	ConstraintsMatrixI(43, 24) = 0;
	ConstraintsMatrixI(43, 25) = 0;
	ConstraintsMatrixI(43, 26) = 0;
	ConstraintsMatrixI(43, 27) = 0;
	ConstraintsMatrixI(43, 28) = 0;
	ConstraintsMatrixI(44, 0) = 0;
	ConstraintsMatrixI(44, 1) = 0;
	ConstraintsMatrixI(44, 2) = 0;
	ConstraintsMatrixI(44, 3) = 0;
	ConstraintsMatrixI(44, 4) = 0;
	ConstraintsMatrixI(44, 5) = 0;
	ConstraintsMatrixI(44, 6) = 0;
	ConstraintsMatrixI(44, 7) = 0;
	ConstraintsMatrixI(44, 8) = 0;
	ConstraintsMatrixI(44, 9) = 0;
	ConstraintsMatrixI(44, 10) = 0;
	ConstraintsMatrixI(44, 11) = 0;
	ConstraintsMatrixI(44, 12) = 0;
	ConstraintsMatrixI(44, 13) = 0;
	ConstraintsMatrixI(44, 14) = 0;
	ConstraintsMatrixI(44, 15) = 0;
	ConstraintsMatrixI(44, 16) = 0;
	ConstraintsMatrixI(44, 17) = 0;
	ConstraintsMatrixI(44, 18) = 0;
	ConstraintsMatrixI(44, 19) = 0;
	ConstraintsMatrixI(44, 20) = 0;
	ConstraintsMatrixI(44, 21) = 0;
	ConstraintsMatrixI(44, 22) = 1;
	ConstraintsMatrixI(44, 23) = 0;
	ConstraintsMatrixI(44, 24) = 0;
	ConstraintsMatrixI(44, 25) = 0;
	ConstraintsMatrixI(44, 26) = 0;
	ConstraintsMatrixI(44, 27) = 0;
	ConstraintsMatrixI(44, 28) = 0;
	ConstraintsMatrixI(45, 0) = 0;
	ConstraintsMatrixI(45, 1) = 0;
	ConstraintsMatrixI(45, 2) = 0;
	ConstraintsMatrixI(45, 3) = 0;
	ConstraintsMatrixI(45, 4) = 0;
	ConstraintsMatrixI(45, 5) = 0;
	ConstraintsMatrixI(45, 6) = 0;
	ConstraintsMatrixI(45, 7) = 0;
	ConstraintsMatrixI(45, 8) = 0;
	ConstraintsMatrixI(45, 9) = 0;
	ConstraintsMatrixI(45, 10) = 0;
	ConstraintsMatrixI(45, 11) = 0;
	ConstraintsMatrixI(45, 12) = 0;
	ConstraintsMatrixI(45, 13) = 0;
	ConstraintsMatrixI(45, 14) = 0;
	ConstraintsMatrixI(45, 15) = 0;
	ConstraintsMatrixI(45, 16) = 0;
	ConstraintsMatrixI(45, 17) = 0;
	ConstraintsMatrixI(45, 18) = 0;
	ConstraintsMatrixI(45, 19) = 0;
	ConstraintsMatrixI(45, 20) = 0;
	ConstraintsMatrixI(45, 21) = 0;
	ConstraintsMatrixI(45, 22) = -1;
	ConstraintsMatrixI(45, 23) = 0;
	ConstraintsMatrixI(45, 24) = 0;
	ConstraintsMatrixI(45, 25) = 0;
	ConstraintsMatrixI(45, 26) = 0;
	ConstraintsMatrixI(45, 27) = 0;
	ConstraintsMatrixI(45, 28) = 0;
	ConstraintsMatrixI(46, 0) = 0;
	ConstraintsMatrixI(46, 1) = 0;
	ConstraintsMatrixI(46, 2) = 0;
	ConstraintsMatrixI(46, 3) = 0;
	ConstraintsMatrixI(46, 4) = 0;
	ConstraintsMatrixI(46, 5) = 0;
	ConstraintsMatrixI(46, 6) = 0;
	ConstraintsMatrixI(46, 7) = 0;
	ConstraintsMatrixI(46, 8) = 0;
	ConstraintsMatrixI(46, 9) = 0;
	ConstraintsMatrixI(46, 10) = 0;
	ConstraintsMatrixI(46, 11) = 0;
	ConstraintsMatrixI(46, 12) = 0;
	ConstraintsMatrixI(46, 13) = 0;
	ConstraintsMatrixI(46, 14) = 0;
	ConstraintsMatrixI(46, 15) = 0;
	ConstraintsMatrixI(46, 16) = 0;
	ConstraintsMatrixI(46, 17) = 0;
	ConstraintsMatrixI(46, 18) = 0;
	ConstraintsMatrixI(46, 19) = 0;
	ConstraintsMatrixI(46, 20) = 0;
	ConstraintsMatrixI(46, 21) = 0;
	ConstraintsMatrixI(46, 22) = 0;
	ConstraintsMatrixI(46, 23) = 1;
	ConstraintsMatrixI(46, 24) = 0;
	ConstraintsMatrixI(46, 25) = 0;
	ConstraintsMatrixI(46, 26) = 0;
	ConstraintsMatrixI(46, 27) = 0;
	ConstraintsMatrixI(46, 28) = 0;
	ConstraintsMatrixI(47, 0) = 0;
	ConstraintsMatrixI(47, 1) = 0;
	ConstraintsMatrixI(47, 2) = 0;
	ConstraintsMatrixI(47, 3) = 0;
	ConstraintsMatrixI(47, 4) = 0;
	ConstraintsMatrixI(47, 5) = 0;
	ConstraintsMatrixI(47, 6) = 0;
	ConstraintsMatrixI(47, 7) = 0;
	ConstraintsMatrixI(47, 8) = 0;
	ConstraintsMatrixI(47, 9) = 0;
	ConstraintsMatrixI(47, 10) = 0;
	ConstraintsMatrixI(47, 11) = 0;
	ConstraintsMatrixI(47, 12) = 0;
	ConstraintsMatrixI(47, 13) = 0;
	ConstraintsMatrixI(47, 14) = 0;
	ConstraintsMatrixI(47, 15) = 0;
	ConstraintsMatrixI(47, 16) = 0;
	ConstraintsMatrixI(47, 17) = 0;
	ConstraintsMatrixI(47, 18) = 0;
	ConstraintsMatrixI(47, 19) = 0;
	ConstraintsMatrixI(47, 20) = 0;
	ConstraintsMatrixI(47, 21) = 0;
	ConstraintsMatrixI(47, 22) = 0;
	ConstraintsMatrixI(47, 23) = -1;
	ConstraintsMatrixI(47, 24) = 0;
	ConstraintsMatrixI(47, 25) = 0;
	ConstraintsMatrixI(47, 26) = 0;
	ConstraintsMatrixI(47, 27) = 0;
	ConstraintsMatrixI(47, 28) = 0;
	ConstraintsMatrixI(48, 0) = 0;
	ConstraintsMatrixI(48, 1) = 0;
	ConstraintsMatrixI(48, 2) = 0;
	ConstraintsMatrixI(48, 3) = 0;
	ConstraintsMatrixI(48, 4) = 0;
	ConstraintsMatrixI(48, 5) = 0;
	ConstraintsMatrixI(48, 6) = 0;
	ConstraintsMatrixI(48, 7) = 0;
	ConstraintsMatrixI(48, 8) = 0;
	ConstraintsMatrixI(48, 9) = 0;
	ConstraintsMatrixI(48, 10) = 0;
	ConstraintsMatrixI(48, 11) = 0;
	ConstraintsMatrixI(48, 12) = 0;
	ConstraintsMatrixI(48, 13) = 0;
	ConstraintsMatrixI(48, 14) = 0;
	ConstraintsMatrixI(48, 15) = 0;
	ConstraintsMatrixI(48, 16) = 0;
	ConstraintsMatrixI(48, 17) = 0;
	ConstraintsMatrixI(48, 18) = 0;
	ConstraintsMatrixI(48, 19) = 0;
	ConstraintsMatrixI(48, 20) = 0;
	ConstraintsMatrixI(48, 21) = 0;
	ConstraintsMatrixI(48, 22) = 0;
	ConstraintsMatrixI(48, 23) = 0;
	ConstraintsMatrixI(48, 24) = 1;
	ConstraintsMatrixI(48, 25) = 0;
	ConstraintsMatrixI(48, 26) = 0;
	ConstraintsMatrixI(48, 27) = 0;
	ConstraintsMatrixI(48, 28) = 0;
	ConstraintsMatrixI(49, 0) = 0;
	ConstraintsMatrixI(49, 1) = 0;
	ConstraintsMatrixI(49, 2) = 0;
	ConstraintsMatrixI(49, 3) = 0;
	ConstraintsMatrixI(49, 4) = 0;
	ConstraintsMatrixI(49, 5) = 0;
	ConstraintsMatrixI(49, 6) = 0;
	ConstraintsMatrixI(49, 7) = 0;
	ConstraintsMatrixI(49, 8) = 0;
	ConstraintsMatrixI(49, 9) = 0;
	ConstraintsMatrixI(49, 10) = 0;
	ConstraintsMatrixI(49, 11) = 0;
	ConstraintsMatrixI(49, 12) = 0;
	ConstraintsMatrixI(49, 13) = 0;
	ConstraintsMatrixI(49, 14) = 0;
	ConstraintsMatrixI(49, 15) = 0;
	ConstraintsMatrixI(49, 16) = 0;
	ConstraintsMatrixI(49, 17) = 0;
	ConstraintsMatrixI(49, 18) = 0;
	ConstraintsMatrixI(49, 19) = 0;
	ConstraintsMatrixI(49, 20) = 0;
	ConstraintsMatrixI(49, 21) = 0;
	ConstraintsMatrixI(49, 22) = 0;
	ConstraintsMatrixI(49, 23) = 0;
	ConstraintsMatrixI(49, 24) = -1;
	ConstraintsMatrixI(49, 25) = 0;
	ConstraintsMatrixI(49, 26) = 0;
	ConstraintsMatrixI(49, 27) = 0;
	ConstraintsMatrixI(49, 28) = 0;
	ConstraintsMatrixI(50, 0) = 0;
	ConstraintsMatrixI(50, 1) = 0;
	ConstraintsMatrixI(50, 2) = 0;
	ConstraintsMatrixI(50, 3) = 0;
	ConstraintsMatrixI(50, 4) = 0;
	ConstraintsMatrixI(50, 5) = 0;
	ConstraintsMatrixI(50, 6) = 0;
	ConstraintsMatrixI(50, 7) = 0;
	ConstraintsMatrixI(50, 8) = 0;
	ConstraintsMatrixI(50, 9) = 0;
	ConstraintsMatrixI(50, 10) = 0;
	ConstraintsMatrixI(50, 11) = 0;
	ConstraintsMatrixI(50, 12) = 0;
	ConstraintsMatrixI(50, 13) = 0;
	ConstraintsMatrixI(50, 14) = 0;
	ConstraintsMatrixI(50, 15) = 0;
	ConstraintsMatrixI(50, 16) = 0;
	ConstraintsMatrixI(50, 17) = 0;
	ConstraintsMatrixI(50, 18) = 0;
	ConstraintsMatrixI(50, 19) = 0;
	ConstraintsMatrixI(50, 20) = 0;
	ConstraintsMatrixI(50, 21) = 0;
	ConstraintsMatrixI(50, 22) = 0;
	ConstraintsMatrixI(50, 23) = 0;
	ConstraintsMatrixI(50, 24) = 0;
	ConstraintsMatrixI(50, 25) = 1;
	ConstraintsMatrixI(50, 26) = 0;
	ConstraintsMatrixI(50, 27) = 0;
	ConstraintsMatrixI(50, 28) = 0;
	ConstraintsMatrixI(51, 0) = 0;
	ConstraintsMatrixI(51, 1) = 0;
	ConstraintsMatrixI(51, 2) = 0;
	ConstraintsMatrixI(51, 3) = 0;
	ConstraintsMatrixI(51, 4) = 0;
	ConstraintsMatrixI(51, 5) = 0;
	ConstraintsMatrixI(51, 6) = 0;
	ConstraintsMatrixI(51, 7) = 0;
	ConstraintsMatrixI(51, 8) = 0;
	ConstraintsMatrixI(51, 9) = 0;
	ConstraintsMatrixI(51, 10) = 0;
	ConstraintsMatrixI(51, 11) = 0;
	ConstraintsMatrixI(51, 12) = 0;
	ConstraintsMatrixI(51, 13) = 0;
	ConstraintsMatrixI(51, 14) = 0;
	ConstraintsMatrixI(51, 15) = 0;
	ConstraintsMatrixI(51, 16) = 0;
	ConstraintsMatrixI(51, 17) = 0;
	ConstraintsMatrixI(51, 18) = 0;
	ConstraintsMatrixI(51, 19) = 0;
	ConstraintsMatrixI(51, 20) = 0;
	ConstraintsMatrixI(51, 21) = 0;
	ConstraintsMatrixI(51, 22) = 0;
	ConstraintsMatrixI(51, 23) = 0;
	ConstraintsMatrixI(51, 24) = 0;
	ConstraintsMatrixI(51, 25) = -1;
	ConstraintsMatrixI(51, 26) = 0;
	ConstraintsMatrixI(51, 27) = 0;
	ConstraintsMatrixI(51, 28) = 0;
	ConstraintsMatrixI(52, 0) = 0;
	ConstraintsMatrixI(52, 1) = 0;
	ConstraintsMatrixI(52, 2) = 0;
	ConstraintsMatrixI(52, 3) = 0;
	ConstraintsMatrixI(52, 4) = 0;
	ConstraintsMatrixI(52, 5) = 0;
	ConstraintsMatrixI(52, 6) = 0;
	ConstraintsMatrixI(52, 7) = 0;
	ConstraintsMatrixI(52, 8) = 0;
	ConstraintsMatrixI(52, 9) = 0;
	ConstraintsMatrixI(52, 10) = 0;
	ConstraintsMatrixI(52, 11) = 0;
	ConstraintsMatrixI(52, 12) = 0;
	ConstraintsMatrixI(52, 13) = 0;
	ConstraintsMatrixI(52, 14) = 0;
	ConstraintsMatrixI(52, 15) = 0;
	ConstraintsMatrixI(52, 16) = 0;
	ConstraintsMatrixI(52, 17) = 0;
	ConstraintsMatrixI(52, 18) = 0;
	ConstraintsMatrixI(52, 19) = 0;
	ConstraintsMatrixI(52, 20) = 0;
	ConstraintsMatrixI(52, 21) = 0;
	ConstraintsMatrixI(52, 22) = 0;
	ConstraintsMatrixI(52, 23) = 0;
	ConstraintsMatrixI(52, 24) = 0;
	ConstraintsMatrixI(52, 25) = 0;
	ConstraintsMatrixI(52, 26) = 1;
	ConstraintsMatrixI(52, 27) = 0;
	ConstraintsMatrixI(52, 28) = 0;
	ConstraintsMatrixI(53, 0) = 0;
	ConstraintsMatrixI(53, 1) = 0;
	ConstraintsMatrixI(53, 2) = 0;
	ConstraintsMatrixI(53, 3) = 0;
	ConstraintsMatrixI(53, 4) = 0;
	ConstraintsMatrixI(53, 5) = 0;
	ConstraintsMatrixI(53, 6) = 0;
	ConstraintsMatrixI(53, 7) = 0;
	ConstraintsMatrixI(53, 8) = 0;
	ConstraintsMatrixI(53, 9) = 0;
	ConstraintsMatrixI(53, 10) = 0;
	ConstraintsMatrixI(53, 11) = 0;
	ConstraintsMatrixI(53, 12) = 0;
	ConstraintsMatrixI(53, 13) = 0;
	ConstraintsMatrixI(53, 14) = 0;
	ConstraintsMatrixI(53, 15) = 0;
	ConstraintsMatrixI(53, 16) = 0;
	ConstraintsMatrixI(53, 17) = 0;
	ConstraintsMatrixI(53, 18) = 0;
	ConstraintsMatrixI(53, 19) = 0;
	ConstraintsMatrixI(53, 20) = 0;
	ConstraintsMatrixI(53, 21) = 0;
	ConstraintsMatrixI(53, 22) = 0;
	ConstraintsMatrixI(53, 23) = 0;
	ConstraintsMatrixI(53, 24) = 0;
	ConstraintsMatrixI(53, 25) = 0;
	ConstraintsMatrixI(53, 26) = -1;
	ConstraintsMatrixI(53, 27) = 0;
	ConstraintsMatrixI(53, 28) = 0;
	ConstraintsMatrixI(54, 0) = 0;
	ConstraintsMatrixI(54, 1) = 0;
	ConstraintsMatrixI(54, 2) = 0;
	ConstraintsMatrixI(54, 3) = 0;
	ConstraintsMatrixI(54, 4) = 0;
	ConstraintsMatrixI(54, 5) = 0;
	ConstraintsMatrixI(54, 6) = 0;
	ConstraintsMatrixI(54, 7) = 0;
	ConstraintsMatrixI(54, 8) = 0;
	ConstraintsMatrixI(54, 9) = 0;
	ConstraintsMatrixI(54, 10) = 0;
	ConstraintsMatrixI(54, 11) = 0;
	ConstraintsMatrixI(54, 12) = 0;
	ConstraintsMatrixI(54, 13) = 0;
	ConstraintsMatrixI(54, 14) = 0;
	ConstraintsMatrixI(54, 15) = 0;
	ConstraintsMatrixI(54, 16) = 0;
	ConstraintsMatrixI(54, 17) = 0;
	ConstraintsMatrixI(54, 18) = 0;
	ConstraintsMatrixI(54, 19) = 0;
	ConstraintsMatrixI(54, 20) = 0;
	ConstraintsMatrixI(54, 21) = 0;
	ConstraintsMatrixI(54, 22) = 0;
	ConstraintsMatrixI(54, 23) = 0;
	ConstraintsMatrixI(54, 24) = 0;
	ConstraintsMatrixI(54, 25) = 0;
	ConstraintsMatrixI(54, 26) = 0;
	ConstraintsMatrixI(54, 27) = 1;
	ConstraintsMatrixI(54, 28) = 0;
	ConstraintsMatrixI(55, 0) = 0;
	ConstraintsMatrixI(55, 1) = 0;
	ConstraintsMatrixI(55, 2) = 0;
	ConstraintsMatrixI(55, 3) = 0;
	ConstraintsMatrixI(55, 4) = 0;
	ConstraintsMatrixI(55, 5) = 0;
	ConstraintsMatrixI(55, 6) = 0;
	ConstraintsMatrixI(55, 7) = 0;
	ConstraintsMatrixI(55, 8) = 0;
	ConstraintsMatrixI(55, 9) = 0;
	ConstraintsMatrixI(55, 10) = 0;
	ConstraintsMatrixI(55, 11) = 0;
	ConstraintsMatrixI(55, 12) = 0;
	ConstraintsMatrixI(55, 13) = 0;
	ConstraintsMatrixI(55, 14) = 0;
	ConstraintsMatrixI(55, 15) = 0;
	ConstraintsMatrixI(55, 16) = 0;
	ConstraintsMatrixI(55, 17) = 0;
	ConstraintsMatrixI(55, 18) = 0;
	ConstraintsMatrixI(55, 19) = 0;
	ConstraintsMatrixI(55, 20) = 0;
	ConstraintsMatrixI(55, 21) = 0;
	ConstraintsMatrixI(55, 22) = 0;
	ConstraintsMatrixI(55, 23) = 0;
	ConstraintsMatrixI(55, 24) = 0;
	ConstraintsMatrixI(55, 25) = 0;
	ConstraintsMatrixI(55, 26) = 0;
	ConstraintsMatrixI(55, 27) = -1;
	ConstraintsMatrixI(55, 28) = 0;
	ConstraintsMatrixI(56, 0) = 0;
	ConstraintsMatrixI(56, 1) = 0;
	ConstraintsMatrixI(56, 2) = 0;
	ConstraintsMatrixI(56, 3) = 0;
	ConstraintsMatrixI(56, 4) = 0;
	ConstraintsMatrixI(56, 5) = 0;
	ConstraintsMatrixI(56, 6) = 0;
	ConstraintsMatrixI(56, 7) = 0;
	ConstraintsMatrixI(56, 8) = 0;
	ConstraintsMatrixI(56, 9) = 0;
	ConstraintsMatrixI(56, 10) = 0;
	ConstraintsMatrixI(56, 11) = 0;
	ConstraintsMatrixI(56, 12) = 0;
	ConstraintsMatrixI(56, 13) = 0;
	ConstraintsMatrixI(56, 14) = 0;
	ConstraintsMatrixI(56, 15) = 0;
	ConstraintsMatrixI(56, 16) = 0;
	ConstraintsMatrixI(56, 17) = 0;
	ConstraintsMatrixI(56, 18) = 0;
	ConstraintsMatrixI(56, 19) = 0;
	ConstraintsMatrixI(56, 20) = 0;
	ConstraintsMatrixI(56, 21) = 0;
	ConstraintsMatrixI(56, 22) = 0;
	ConstraintsMatrixI(56, 23) = 0;
	ConstraintsMatrixI(56, 24) = 0;
	ConstraintsMatrixI(56, 25) = 0;
	ConstraintsMatrixI(56, 26) = 0;
	ConstraintsMatrixI(56, 27) = 0;
	ConstraintsMatrixI(56, 28) = 1;
	ConstraintsMatrixI(57, 0) = 0;
	ConstraintsMatrixI(57, 1) = 0;
	ConstraintsMatrixI(57, 2) = 0;
	ConstraintsMatrixI(57, 3) = 0;
	ConstraintsMatrixI(57, 4) = 0;
	ConstraintsMatrixI(57, 5) = 0;
	ConstraintsMatrixI(57, 6) = 0;
	ConstraintsMatrixI(57, 7) = 0;
	ConstraintsMatrixI(57, 8) = 0;
	ConstraintsMatrixI(57, 9) = 0;
	ConstraintsMatrixI(57, 10) = 0;
	ConstraintsMatrixI(57, 11) = 0;
	ConstraintsMatrixI(57, 12) = 0;
	ConstraintsMatrixI(57, 13) = 0;
	ConstraintsMatrixI(57, 14) = 0;
	ConstraintsMatrixI(57, 15) = 0;
	ConstraintsMatrixI(57, 16) = 0;
	ConstraintsMatrixI(57, 17) = 0;
	ConstraintsMatrixI(57, 18) = 0;
	ConstraintsMatrixI(57, 19) = 0;
	ConstraintsMatrixI(57, 20) = 0;
	ConstraintsMatrixI(57, 21) = 0;
	ConstraintsMatrixI(57, 22) = 0;
	ConstraintsMatrixI(57, 23) = 0;
	ConstraintsMatrixI(57, 24) = 0;
	ConstraintsMatrixI(57, 25) = 0;
	ConstraintsMatrixI(57, 26) = 0;
	ConstraintsMatrixI(57, 27) = 0;
	ConstraintsMatrixI(57, 28) = -1;
	boundValueI.resize(row);
	boundValueI[0] = 0;
	boundValueI[1] = 0;
	boundValueI[2] = 0.1;
	boundValueI[3] = 0;
	boundValueI[4] = 0.1;
	boundValueI[5] = 0;
	boundValueI[6] = 0.1;
	boundValueI[7] = 0;
	boundValueI[8] = 0.1;
	boundValueI[9] = 0;
	boundValueI[10] = 0.1;
	boundValueI[11] = 0;
	boundValueI[12] = 0.1;
	boundValueI[13] = 0;
	boundValueI[14] = 0.1;
	boundValueI[15] = 0;
	boundValueI[16] = 0.1;
	boundValueI[17] = 0;
	boundValueI[18] = 0;
	boundValueI[19] = 0;
	boundValueI[20] = 0;
	boundValueI[21] = 0;
	boundValueI[22] = 0;
	boundValueI[23] = 0;
	boundValueI[24] = 0;
	boundValueI[25] = 0;
	boundValueI[26] = 0;
	boundValueI[27] = 0;
	boundValueI[28] = 0;
	boundValueI[29] = 0;
	boundValueI[30] = 0;
	boundValueI[31] = 0;
	boundValueI[32] = 0;
	boundValueI[33] = 0;
	boundValueI[34] = 0;
	boundValueI[35] = 0;
	boundValueI[36] = 0;
	boundValueI[37] = 0;
	boundValueI[38] = 0;
	boundValueI[39] = 0;
	boundValueI[40] = 0;
	boundValueI[41] = 0;
	boundValueI[42] = 0;
	boundValueI[43] = 0;
	boundValueI[44] = 0;
	boundValueI[45] = 0;
	boundValueI[46] = 0;
	boundValueI[47] = 0;
	boundValueI[48] = 0;
	boundValueI[49] = 0;
	boundValueI[50] = 0;
	boundValueI[51] = 0;
	boundValueI[52] = 0;
	boundValueI[53] = 0;
	boundValueI[54] = 0;
	boundValueI[55] = 0;
	boundValueI[56] = 0;
	boundValueI[57] = 0;
	boundSignI = 1;

	initial_polytope_I = polytope::ptr(
			new polytope(ConstraintsMatrixI, boundValueI, boundSignI));

	std::list<transition::ptr> Out_Going_Trans_fromticking_idle;

	location::ptr l1 = location::ptr(
			new location(1, "ticking_idle", system_dynamics0, invariant0, false,
					Out_Going_Trans_fromticking_idle));

	int dim = initial_polytope_I->getSystemDimension();
	Hybrid_Automata.addInitial_Location(l1);
	Hybrid_Automata.addLocation(l1);
	Hybrid_Automata.setDimension(dim);

	Hybrid_Automata.insert_to_map("x1", 0);
	Hybrid_Automata.insert_to_map("x2", 1);
	Hybrid_Automata.insert_to_map("x3", 2);
	Hybrid_Automata.insert_to_map("x4", 3);
	Hybrid_Automata.insert_to_map("x5", 4);
	Hybrid_Automata.insert_to_map("x6", 5);
	Hybrid_Automata.insert_to_map("x7", 6);
	Hybrid_Automata.insert_to_map("x8", 7);
	Hybrid_Automata.insert_to_map("x9", 8);
	Hybrid_Automata.insert_to_map("x10", 10);
	Hybrid_Automata.insert_to_map("x11", 10);
	Hybrid_Automata.insert_to_map("x12", 11);
	Hybrid_Automata.insert_to_map("x13", 12);
	Hybrid_Automata.insert_to_map("x14", 13);
	Hybrid_Automata.insert_to_map("x15", 14);
	Hybrid_Automata.insert_to_map("x16", 15);
	Hybrid_Automata.insert_to_map("x17", 16);
	Hybrid_Automata.insert_to_map("x18", 17);
	Hybrid_Automata.insert_to_map("x19", 18);
	Hybrid_Automata.insert_to_map("x20", 19);
	Hybrid_Automata.insert_to_map("x21", 20);
	Hybrid_Automata.insert_to_map("x22", 21);
	Hybrid_Automata.insert_to_map("x23", 22);
	Hybrid_Automata.insert_to_map("x24", 23);
	Hybrid_Automata.insert_to_map("x25", 24);
	Hybrid_Automata.insert_to_map("x26", 25);
	Hybrid_Automata.insert_to_map("x27", 26);
	Hybrid_Automata.insert_to_map("x28", 27);

	unsigned int initial_location_id = 1; //the initial Location ID
	symbolic_states::ptr S; //null_pointer as there is no instantiation
	int transition_id = 0; //initial location no transition taken yet
	initial_state::ptr I = initial_state::ptr(
			new initial_state(initial_location_id, initial_polytope_I, S,
					transition_id));

	init_state_list.push_back(I);
}

